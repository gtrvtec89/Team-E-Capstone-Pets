@model test.TEmployee

@{
    ViewBag.Title = "Edit";
}

<h2>Employees</h2>

<p style="margin-left: 25px">
    <button class="btn-primary" onclick="location.href='@Url.Action("Index", "TEmployees")';return false;">
        <i class="fas fa-arrow-left"></i>  Back to List
    </button>
</p>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="body-content">
    <div class="form-horizontal">
        <h4 style="text-decoration: none; padding-top: 10px; padding-left: 10px">
            Edit Employee

            <button class="btn-success" type="submit" style="margin-left: 15px; font-size:smaller">
                <i class="far fa-save"></i> Save
            </button>
        </h4>

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.intEmployeeID)

            <div class="form-group row">
                @Html.LabelFor(model => model.strFirstName, "First Name",htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.strFirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strFirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.strLastName,"Last Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.strLastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.strLastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.intJobTitleID, "Job Title", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("intJobTitleID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.intJobTitleID, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(m => m.intUserID)

            @*<div class="form-group row">
                @Html.LabelFor(model => model.intUserID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.intUserID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.intUserID, "", new { @class = "text-danger" })
                </div>
            </div>*@


            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <button class="btn-success" type="submit">
                        <i class="far fa-save"></i> Save
                    </button>
                </div>
            </div>
        </div>
    </div>
</div>
  }

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
