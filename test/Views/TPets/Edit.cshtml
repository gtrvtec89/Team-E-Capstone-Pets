@model test.TPet

@{
	ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<p style="margin-left: 30px">
	<button class="btn-primary" onclick="location.href='@Url.Action("Index", "TPets")';return false;">
		<i class="fas fa-arrow-left"></i>  Back to List
	</button>
</p>
@using (Html.BeginForm("Edit", "TPets", null, FormMethod.Post, new { enctype = "multipart/form-data" })) {
	@Html.AntiForgeryToken()

	<div class="body-content">
		<div class="form-horizontal">
			<h4 style="text-decoration: none; padding-top: 10px; padding-left: 10px">
				Edit Pet
				<button class="btn-success" type="submit" style="margin-left: 15px; font-size:smaller">
					<i class="far fa-save"></i> Save
				</button>
			</h4>
			<hr style="margin:5px; margin-bottom: 15px" />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			@Html.HiddenFor(model => model.intPetID)

			<div class="form-group">
			@Html.Label("Picture", new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<input type="file" id="Image" name="upload" />
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strPetNumber, "Tag #", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strPetNumber, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strPetNumber, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strMicrochipID, "Microchip ID", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strMicrochipID, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strMicrochipID, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strPetName, "Pet Name", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strPetName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strPetName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.intPetTypeID, "Pet Type", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("intPetTypeID", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.intPetTypeID, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.intGenderID, "Gender", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("intGenderID", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.intGenderID, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.intBreedID, "Breed", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("intBreedID", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.intBreedID, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.dtmDateofBirth, "Birthdate", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.dtmDateofBirth, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.dtmDateofBirth, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.dblWeight, "Weight", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.dblWeight, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.dblWeight, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.isBlind, "Blind", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.isBlind)
						@Html.ValidationMessageFor(model => model.isBlind, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.isDeaf, "Deaf", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.isDeaf)
						@Html.ValidationMessageFor(model => model.isDeaf, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.isAggressive, "Aggressive", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.isAggressive)
						@Html.ValidationMessageFor(model => model.isAggressive, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.isDeceased, "Deceased", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.isDeceased)
						@Html.ValidationMessageFor(model => model.isDeceased, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.isAllergic, "Allergies", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					<div class="checkbox">
						@Html.EditorFor(model => model.isAllergic)
						@Html.ValidationMessageFor(model => model.isAllergic, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strColor, "Color", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strColor, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strColor, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.strNotes, "Notes", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.strNotes, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.strNotes, "", new { @class = "text-danger" })
				</div>
			</div>


			<div class="form-group">
				@Html.LabelFor(model => model.intOwnerID, "Owner", htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DropDownList("intOwnerID", null, htmlAttributes: new { @class = "form-control" })
					@Html.ValidationMessageFor(model => model.intOwnerID, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-2 col-md-10">
					<button class="btn-success" type="submit">
						<i class="far fa-save"></i> Save
					</button>
				</div>
			</div>
		</div>
	</div>
}


@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
