@model test.TVisit

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


<p style="margin-left: 30px">
    <button class="btn-primary" onclick="location.href='@Url.Action("PetVisits", "TVisits", new { id = Model.intPetID })';return false;">
        <i class="fas fa-arrow-left"></i>  Back to Pet Visits
    </button>
</p>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="body-content">
        <div class="form-horizontal">
            <h4 style="text-decoration: none; padding-top: 10px; padding-left: 10px">
                Visit
            </h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.intVisitID)

            @*<div class="form-group row">
                    @Html.LabelFor(model => model.intPetID, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.intPetID, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.intPetID, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group row">
                @Html.LabelFor(model => model.intVisitReasonID, "Visit Reason", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("intVisitReasonID", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.intVisitReasonID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.dtmDateOfVist, "Date of Visit", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dtmDateOfVist, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.dtmDateOfVist, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.dtmDateOfVist, "Date of Visit", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.dtmDateOfVist, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.dtmDateOfVist, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
