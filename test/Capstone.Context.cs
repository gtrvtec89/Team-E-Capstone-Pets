//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace test
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CapstoneEntities : DbContext
    {
        public CapstoneEntities()
            : base("name=CapstoneEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TAbdomenInfo> TAbdomenInfos { get; set; }
        public virtual DbSet<TBreed> TBreeds { get; set; }
        public virtual DbSet<TEarStatusInfo> TEarStatusInfos { get; set; }
        public virtual DbSet<TEmployee> TEmployees { get; set; }
        public virtual DbSet<TEyeStatusInfo> TEyeStatusInfos { get; set; }
        public virtual DbSet<TGender> TGenders { get; set; }
        public virtual DbSet<TGIInfo> TGIInfos { get; set; }
        public virtual DbSet<THealthExam> THealthExams { get; set; }
        public virtual DbSet<THeartInfo> THeartInfos { get; set; }
        public virtual DbSet<TJobTitle> TJobTitles { get; set; }
        public virtual DbSet<TLungInfo> TLungInfos { get; set; }
        public virtual DbSet<TMedication> TMedications { get; set; }
        public virtual DbSet<TMethod> TMethods { get; set; }
        public virtual DbSet<TMouthInfo> TMouthInfos { get; set; }
        public virtual DbSet<TMusculoskeletalInfo> TMusculoskeletalInfos { get; set; }
        public virtual DbSet<TNeurologicalInfo> TNeurologicalInfos { get; set; }
        public virtual DbSet<TNoseThroatInfo> TNoseThroatInfos { get; set; }
        public virtual DbSet<TOwner> TOwners { get; set; }
        public virtual DbSet<TPetImage> TPetImages { get; set; }
        public virtual DbSet<TPet> TPets { get; set; }
        public virtual DbSet<TPetType> TPetTypes { get; set; }
        public virtual DbSet<TRole> TRoles { get; set; }
        public virtual DbSet<TService> TServices { get; set; }
        public virtual DbSet<TServiceType> TServiceTypes { get; set; }
        public virtual DbSet<TSkinInfo> TSkinInfos { get; set; }
        public virtual DbSet<TState> TStates { get; set; }
        public virtual DbSet<TUrogenitalInfo> TUrogenitalInfos { get; set; }
        public virtual DbSet<TUser> TUsers { get; set; }
        public virtual DbSet<TVaccination> TVaccinations { get; set; }
        public virtual DbSet<TVisitEmployee> TVisitEmployees { get; set; }
        public virtual DbSet<TVisitMedication> TVisitMedications { get; set; }
        public virtual DbSet<TVisitReason> TVisitReasons { get; set; }
        public virtual DbSet<TVisit> TVisits { get; set; }
        public virtual DbSet<TVisitService> TVisitServices { get; set; }
    
        public virtual int uspAddAbdomenInfos(Nullable<bool> isNormal, Nullable<bool> isAbnormalMass, Nullable<bool> isPainful, Nullable<bool> isBloated, Nullable<bool> isEnlarged, Nullable<bool> isFluid, Nullable<bool> isHernia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isAbnormalMassParameter = isAbnormalMass.HasValue ?
                new ObjectParameter("isAbnormalMass", isAbnormalMass) :
                new ObjectParameter("isAbnormalMass", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isBloatedParameter = isBloated.HasValue ?
                new ObjectParameter("isBloated", isBloated) :
                new ObjectParameter("isBloated", typeof(bool));
    
            var isEnlargedParameter = isEnlarged.HasValue ?
                new ObjectParameter("isEnlarged", isEnlarged) :
                new ObjectParameter("isEnlarged", typeof(bool));
    
            var isFluidParameter = isFluid.HasValue ?
                new ObjectParameter("isFluid", isFluid) :
                new ObjectParameter("isFluid", typeof(bool));
    
            var isHerniaParameter = isHernia.HasValue ?
                new ObjectParameter("isHernia", isHernia) :
                new ObjectParameter("isHernia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddAbdomenInfos", isNormalParameter, isAbnormalMassParameter, isPainfulParameter, isBloatedParameter, isEnlargedParameter, isFluidParameter, isHerniaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEarStatusInfo(Nullable<bool> isNormal, Nullable<bool> isInflamed, Nullable<bool> isTumor, Nullable<bool> isDirty, Nullable<bool> isPainful, Nullable<bool> isExcessiveHair, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEarStatusInfo", isNormalParameter, isInflamedParameter, isTumorParameter, isDirtyParameter, isPainfulParameter, isExcessiveHairParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEmployee(string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEmployee", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspAddEyeStatusInfo(Nullable<bool> isNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isInflamed, Nullable<bool> isEyelidTumor, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEyeStatusInfo", isNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isInflamedParameter, isEyelidTumorParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddGIInfo(Nullable<bool> isNormal, Nullable<bool> isExcessiveGas, Nullable<bool> isParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddGIInfo", isNormalParameter, isExcessiveGasParameter, isParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddHealthExam(Nullable<double> dblWeight, Nullable<double> dblTemperature, Nullable<int> intHeartRate, Nullable<int> intRespRate, Nullable<int> intCapillaryRefillTime, string strMucousMembrane, Nullable<int> intVisitServiceID, string strNotes)
        {
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var dblTemperatureParameter = dblTemperature.HasValue ?
                new ObjectParameter("dblTemperature", dblTemperature) :
                new ObjectParameter("dblTemperature", typeof(double));
    
            var intHeartRateParameter = intHeartRate.HasValue ?
                new ObjectParameter("intHeartRate", intHeartRate) :
                new ObjectParameter("intHeartRate", typeof(int));
    
            var intRespRateParameter = intRespRate.HasValue ?
                new ObjectParameter("intRespRate", intRespRate) :
                new ObjectParameter("intRespRate", typeof(int));
    
            var intCapillaryRefillTimeParameter = intCapillaryRefillTime.HasValue ?
                new ObjectParameter("intCapillaryRefillTime", intCapillaryRefillTime) :
                new ObjectParameter("intCapillaryRefillTime", typeof(int));
    
            var strMucousMembraneParameter = strMucousMembrane != null ?
                new ObjectParameter("strMucousMembrane", strMucousMembrane) :
                new ObjectParameter("strMucousMembrane", typeof(string));
    
            var intVisitServiceIDParameter = intVisitServiceID.HasValue ?
                new ObjectParameter("intVisitServiceID", intVisitServiceID) :
                new ObjectParameter("intVisitServiceID", typeof(int));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddHealthExam", dblWeightParameter, dblTemperatureParameter, intHeartRateParameter, intRespRateParameter, intCapillaryRefillTimeParameter, strMucousMembraneParameter, intVisitServiceIDParameter, strNotesParameter);
        }
    
        public virtual int uspAddHeartInfos(Nullable<bool> isNormal, Nullable<bool> isMurMur, Nullable<bool> isFast, Nullable<bool> isSlow, Nullable<bool> isMuffled, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isMurMurParameter = isMurMur.HasValue ?
                new ObjectParameter("isMurMur", isMurMur) :
                new ObjectParameter("isMurMur", typeof(bool));
    
            var isFastParameter = isFast.HasValue ?
                new ObjectParameter("isFast", isFast) :
                new ObjectParameter("isFast", typeof(bool));
    
            var isSlowParameter = isSlow.HasValue ?
                new ObjectParameter("isSlow", isSlow) :
                new ObjectParameter("isSlow", typeof(bool));
    
            var isMuffledParameter = isMuffled.HasValue ?
                new ObjectParameter("isMuffled", isMuffled) :
                new ObjectParameter("isMuffled", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddHeartInfos", isNormalParameter, isMurMurParameter, isFastParameter, isSlowParameter, isMuffledParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddLunglInfos(Nullable<bool> isNormal, Nullable<bool> isBreathingDifficulty, Nullable<bool> isRapidRespiration, Nullable<bool> isTrachealPinchPositive, Nullable<bool> isTrachealPinchNegative, Nullable<bool> isCongestion, Nullable<bool> isAbnormalSound, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isBreathingDifficultyParameter = isBreathingDifficulty.HasValue ?
                new ObjectParameter("isBreathingDifficulty", isBreathingDifficulty) :
                new ObjectParameter("isBreathingDifficulty", typeof(bool));
    
            var isRapidRespirationParameter = isRapidRespiration.HasValue ?
                new ObjectParameter("isRapidRespiration", isRapidRespiration) :
                new ObjectParameter("isRapidRespiration", typeof(bool));
    
            var isTrachealPinchPositiveParameter = isTrachealPinchPositive.HasValue ?
                new ObjectParameter("isTrachealPinchPositive", isTrachealPinchPositive) :
                new ObjectParameter("isTrachealPinchPositive", typeof(bool));
    
            var isTrachealPinchNegativeParameter = isTrachealPinchNegative.HasValue ?
                new ObjectParameter("isTrachealPinchNegative", isTrachealPinchNegative) :
                new ObjectParameter("isTrachealPinchNegative", typeof(bool));
    
            var isCongestionParameter = isCongestion.HasValue ?
                new ObjectParameter("isCongestion", isCongestion) :
                new ObjectParameter("isCongestion", typeof(bool));
    
            var isAbnormalSoundParameter = isAbnormalSound.HasValue ?
                new ObjectParameter("isAbnormalSound", isAbnormalSound) :
                new ObjectParameter("isAbnormalSound", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddLunglInfos", isNormalParameter, isBreathingDifficultyParameter, isRapidRespirationParameter, isTrachealPinchPositiveParameter, isTrachealPinchNegativeParameter, isCongestionParameter, isAbnormalSoundParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMedication(string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMedication", strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspAddMouthInfo(Nullable<bool> isNormal, Nullable<bool> isTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMouthInfo", isNormalParameter, isTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMusculoskeletalInfos(Nullable<bool> isNormal, Nullable<bool> isJointProblems, Nullable<bool> isNailProblems, Nullable<bool> isLamenessLF, Nullable<bool> isLamenessRF, Nullable<bool> isLamenessLR, Nullable<bool> isLamenessRR, Nullable<bool> isLigaments, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isJointProblemsParameter = isJointProblems.HasValue ?
                new ObjectParameter("isJointProblems", isJointProblems) :
                new ObjectParameter("isJointProblems", typeof(bool));
    
            var isNailProblemsParameter = isNailProblems.HasValue ?
                new ObjectParameter("isNailProblems", isNailProblems) :
                new ObjectParameter("isNailProblems", typeof(bool));
    
            var isLamenessLFParameter = isLamenessLF.HasValue ?
                new ObjectParameter("isLamenessLF", isLamenessLF) :
                new ObjectParameter("isLamenessLF", typeof(bool));
    
            var isLamenessRFParameter = isLamenessRF.HasValue ?
                new ObjectParameter("isLamenessRF", isLamenessRF) :
                new ObjectParameter("isLamenessRF", typeof(bool));
    
            var isLamenessLRParameter = isLamenessLR.HasValue ?
                new ObjectParameter("isLamenessLR", isLamenessLR) :
                new ObjectParameter("isLamenessLR", typeof(bool));
    
            var isLamenessRRParameter = isLamenessRR.HasValue ?
                new ObjectParameter("isLamenessRR", isLamenessRR) :
                new ObjectParameter("isLamenessRR", typeof(bool));
    
            var isLigamentsParameter = isLigaments.HasValue ?
                new ObjectParameter("isLigaments", isLigaments) :
                new ObjectParameter("isLigaments", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMusculoskeletalInfos", isNormalParameter, isJointProblemsParameter, isNailProblemsParameter, isLamenessLFParameter, isLamenessRFParameter, isLamenessLRParameter, isLamenessRRParameter, isLigamentsParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNeurologicalInfo(Nullable<bool> isNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNeurologicalInfo", isNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNewUser(string strUserName, string strPassword, Nullable<int> intRoleID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intRoleIDParameter = intRoleID.HasValue ?
                new ObjectParameter("intRoleID", intRoleID) :
                new ObjectParameter("intRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNewUser", strUserNameParameter, strPasswordParameter, intRoleIDParameter);
        }
    
        public virtual int uspAddNoseThroatInfo(Nullable<bool> isNormal, Nullable<bool> isLargeLymphNodes, Nullable<bool> isInflamedThroat, Nullable<bool> isNasalDishcharge, Nullable<bool> isInflamedTonsils, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isLargeLymphNodesParameter = isLargeLymphNodes.HasValue ?
                new ObjectParameter("isLargeLymphNodes", isLargeLymphNodes) :
                new ObjectParameter("isLargeLymphNodes", typeof(bool));
    
            var isInflamedThroatParameter = isInflamedThroat.HasValue ?
                new ObjectParameter("isInflamedThroat", isInflamedThroat) :
                new ObjectParameter("isInflamedThroat", typeof(bool));
    
            var isNasalDishchargeParameter = isNasalDishcharge.HasValue ?
                new ObjectParameter("isNasalDishcharge", isNasalDishcharge) :
                new ObjectParameter("isNasalDishcharge", typeof(bool));
    
            var isInflamedTonsilsParameter = isInflamedTonsils.HasValue ?
                new ObjectParameter("isInflamedTonsils", isInflamedTonsils) :
                new ObjectParameter("isInflamedTonsils", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNoseThroatInfo", isNormalParameter, isLargeLymphNodesParameter, isInflamedThroatParameter, isNasalDishchargeParameter, isInflamedTonsilsParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddOwner(string strFirstName, string strLastName, Nullable<int> intGenderID, string strAddress, string strCity, Nullable<int> intStateID, string strZip, string strPhoneNumber, string strEmail, string strOwner2Name, string strOwner2PhoneNumber, string strOwner2Email, string strNotes, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intStateIDParameter = intStateID.HasValue ?
                new ObjectParameter("intStateID", intStateID) :
                new ObjectParameter("intStateID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strPhoneNumberParameter = strPhoneNumber != null ?
                new ObjectParameter("strPhoneNumber", strPhoneNumber) :
                new ObjectParameter("strPhoneNumber", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strOwner2NameParameter = strOwner2Name != null ?
                new ObjectParameter("strOwner2Name", strOwner2Name) :
                new ObjectParameter("strOwner2Name", typeof(string));
    
            var strOwner2PhoneNumberParameter = strOwner2PhoneNumber != null ?
                new ObjectParameter("strOwner2PhoneNumber", strOwner2PhoneNumber) :
                new ObjectParameter("strOwner2PhoneNumber", typeof(string));
    
            var strOwner2EmailParameter = strOwner2Email != null ?
                new ObjectParameter("strOwner2Email", strOwner2Email) :
                new ObjectParameter("strOwner2Email", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddOwner", strFirstNameParameter, strLastNameParameter, intGenderIDParameter, strAddressParameter, strCityParameter, intStateIDParameter, strZipParameter, strPhoneNumberParameter, strEmailParameter, strOwner2NameParameter, strOwner2PhoneNumberParameter, strOwner2EmailParameter, strNotesParameter, intUserIDParameter);
        }
    
        public virtual int uspAddPets(string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPets", strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddPetVisit(Nullable<double> dblWeight, Nullable<double> dblTemperature, Nullable<int> intHeartRate, Nullable<int> intRespRate, Nullable<int> intCapillaryRefillTime, string strMucousMembrane, Nullable<int> intVisitServiceID, string strNotes, Nullable<bool> isEyeNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isEyeInflamed, Nullable<bool> isEyelidTumor, Nullable<bool> isEarNormal, Nullable<bool> isEarInflamed, Nullable<bool> isEarTumor, Nullable<bool> isDirty, Nullable<bool> isEarPainful, Nullable<bool> isExcessiveHair, Nullable<bool> isSkinNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isSkinParasites, Nullable<bool> isMouthNormal, Nullable<bool> isMouthTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<bool> isNoseThroatNormal, Nullable<bool> isLargeLymphNodes, Nullable<bool> isInflamedThroat, Nullable<bool> isNasalDishcharge, Nullable<bool> isInflamedTonsils, Nullable<bool> isGINormal, Nullable<bool> isExcessiveGas, Nullable<bool> isGIParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID, Nullable<bool> isNeurologicalNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<bool> isAbdomenNormal, Nullable<bool> isAbnormalMass, Nullable<bool> isAbdomenPainful, Nullable<bool> isBloated, Nullable<bool> isEnlarged, Nullable<bool> isFluid, Nullable<bool> isHernia, Nullable<bool> isUrogenitalNormal, Nullable<bool> isUrogenAbnormalUrination, Nullable<bool> isGenitalDischarge, Nullable<bool> isAnalSacs, Nullable<bool> isRectal, Nullable<bool> isMammaryTumors, Nullable<bool> isAbnormalTesticles, Nullable<bool> isBloodSeen, Nullable<bool> isMusculoskeletalNormal, Nullable<bool> isJointProblems, Nullable<bool> isNailProblems, Nullable<bool> isLamenessLF, Nullable<bool> isLamenessRF, Nullable<bool> isLamenessLR, Nullable<bool> isLamenessRR, Nullable<bool> isLigaments, Nullable<bool> isLungNormal, Nullable<bool> isBreathingDifficulty, Nullable<bool> isRapidRespiration, Nullable<bool> isTrachealPinchPositive, Nullable<bool> isTrachealPinchNegative, Nullable<bool> isCongestion, Nullable<bool> isAbnormalSound, Nullable<bool> isHeartNormal, Nullable<bool> isMurMur, Nullable<bool> isFast, Nullable<bool> isSlow, Nullable<bool> isMuffled)
        {
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var dblTemperatureParameter = dblTemperature.HasValue ?
                new ObjectParameter("dblTemperature", dblTemperature) :
                new ObjectParameter("dblTemperature", typeof(double));
    
            var intHeartRateParameter = intHeartRate.HasValue ?
                new ObjectParameter("intHeartRate", intHeartRate) :
                new ObjectParameter("intHeartRate", typeof(int));
    
            var intRespRateParameter = intRespRate.HasValue ?
                new ObjectParameter("intRespRate", intRespRate) :
                new ObjectParameter("intRespRate", typeof(int));
    
            var intCapillaryRefillTimeParameter = intCapillaryRefillTime.HasValue ?
                new ObjectParameter("intCapillaryRefillTime", intCapillaryRefillTime) :
                new ObjectParameter("intCapillaryRefillTime", typeof(int));
    
            var strMucousMembraneParameter = strMucousMembrane != null ?
                new ObjectParameter("strMucousMembrane", strMucousMembrane) :
                new ObjectParameter("strMucousMembrane", typeof(string));
    
            var intVisitServiceIDParameter = intVisitServiceID.HasValue ?
                new ObjectParameter("intVisitServiceID", intVisitServiceID) :
                new ObjectParameter("intVisitServiceID", typeof(int));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var isEyeNormalParameter = isEyeNormal.HasValue ?
                new ObjectParameter("isEyeNormal", isEyeNormal) :
                new ObjectParameter("isEyeNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isEyeInflamedParameter = isEyeInflamed.HasValue ?
                new ObjectParameter("isEyeInflamed", isEyeInflamed) :
                new ObjectParameter("isEyeInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var isEarNormalParameter = isEarNormal.HasValue ?
                new ObjectParameter("isEarNormal", isEarNormal) :
                new ObjectParameter("isEarNormal", typeof(bool));
    
            var isEarInflamedParameter = isEarInflamed.HasValue ?
                new ObjectParameter("isEarInflamed", isEarInflamed) :
                new ObjectParameter("isEarInflamed", typeof(bool));
    
            var isEarTumorParameter = isEarTumor.HasValue ?
                new ObjectParameter("isEarTumor", isEarTumor) :
                new ObjectParameter("isEarTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isEarPainfulParameter = isEarPainful.HasValue ?
                new ObjectParameter("isEarPainful", isEarPainful) :
                new ObjectParameter("isEarPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var isSkinNormalParameter = isSkinNormal.HasValue ?
                new ObjectParameter("isSkinNormal", isSkinNormal) :
                new ObjectParameter("isSkinNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isSkinParasitesParameter = isSkinParasites.HasValue ?
                new ObjectParameter("isSkinParasites", isSkinParasites) :
                new ObjectParameter("isSkinParasites", typeof(bool));
    
            var isMouthNormalParameter = isMouthNormal.HasValue ?
                new ObjectParameter("isMouthNormal", isMouthNormal) :
                new ObjectParameter("isMouthNormal", typeof(bool));
    
            var isMouthTumorParameter = isMouthTumor.HasValue ?
                new ObjectParameter("isMouthTumor", isMouthTumor) :
                new ObjectParameter("isMouthTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var isNoseThroatNormalParameter = isNoseThroatNormal.HasValue ?
                new ObjectParameter("isNoseThroatNormal", isNoseThroatNormal) :
                new ObjectParameter("isNoseThroatNormal", typeof(bool));
    
            var isLargeLymphNodesParameter = isLargeLymphNodes.HasValue ?
                new ObjectParameter("isLargeLymphNodes", isLargeLymphNodes) :
                new ObjectParameter("isLargeLymphNodes", typeof(bool));
    
            var isInflamedThroatParameter = isInflamedThroat.HasValue ?
                new ObjectParameter("isInflamedThroat", isInflamedThroat) :
                new ObjectParameter("isInflamedThroat", typeof(bool));
    
            var isNasalDishchargeParameter = isNasalDishcharge.HasValue ?
                new ObjectParameter("isNasalDishcharge", isNasalDishcharge) :
                new ObjectParameter("isNasalDishcharge", typeof(bool));
    
            var isInflamedTonsilsParameter = isInflamedTonsils.HasValue ?
                new ObjectParameter("isInflamedTonsils", isInflamedTonsils) :
                new ObjectParameter("isInflamedTonsils", typeof(bool));
    
            var isGINormalParameter = isGINormal.HasValue ?
                new ObjectParameter("isGINormal", isGINormal) :
                new ObjectParameter("isGINormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isGIParasitesParameter = isGIParasites.HasValue ?
                new ObjectParameter("isGIParasites", isGIParasites) :
                new ObjectParameter("isGIParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            var isNeurologicalNormalParameter = isNeurologicalNormal.HasValue ?
                new ObjectParameter("isNeurologicalNormal", isNeurologicalNormal) :
                new ObjectParameter("isNeurologicalNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var isAbdomenNormalParameter = isAbdomenNormal.HasValue ?
                new ObjectParameter("isAbdomenNormal", isAbdomenNormal) :
                new ObjectParameter("isAbdomenNormal", typeof(bool));
    
            var isAbnormalMassParameter = isAbnormalMass.HasValue ?
                new ObjectParameter("isAbnormalMass", isAbnormalMass) :
                new ObjectParameter("isAbnormalMass", typeof(bool));
    
            var isAbdomenPainfulParameter = isAbdomenPainful.HasValue ?
                new ObjectParameter("isAbdomenPainful", isAbdomenPainful) :
                new ObjectParameter("isAbdomenPainful", typeof(bool));
    
            var isBloatedParameter = isBloated.HasValue ?
                new ObjectParameter("isBloated", isBloated) :
                new ObjectParameter("isBloated", typeof(bool));
    
            var isEnlargedParameter = isEnlarged.HasValue ?
                new ObjectParameter("isEnlarged", isEnlarged) :
                new ObjectParameter("isEnlarged", typeof(bool));
    
            var isFluidParameter = isFluid.HasValue ?
                new ObjectParameter("isFluid", isFluid) :
                new ObjectParameter("isFluid", typeof(bool));
    
            var isHerniaParameter = isHernia.HasValue ?
                new ObjectParameter("isHernia", isHernia) :
                new ObjectParameter("isHernia", typeof(bool));
    
            var isUrogenitalNormalParameter = isUrogenitalNormal.HasValue ?
                new ObjectParameter("isUrogenitalNormal", isUrogenitalNormal) :
                new ObjectParameter("isUrogenitalNormal", typeof(bool));
    
            var isUrogenAbnormalUrinationParameter = isUrogenAbnormalUrination.HasValue ?
                new ObjectParameter("isUrogenAbnormalUrination", isUrogenAbnormalUrination) :
                new ObjectParameter("isUrogenAbnormalUrination", typeof(bool));
    
            var isGenitalDischargeParameter = isGenitalDischarge.HasValue ?
                new ObjectParameter("isGenitalDischarge", isGenitalDischarge) :
                new ObjectParameter("isGenitalDischarge", typeof(bool));
    
            var isAnalSacsParameter = isAnalSacs.HasValue ?
                new ObjectParameter("isAnalSacs", isAnalSacs) :
                new ObjectParameter("isAnalSacs", typeof(bool));
    
            var isRectalParameter = isRectal.HasValue ?
                new ObjectParameter("isRectal", isRectal) :
                new ObjectParameter("isRectal", typeof(bool));
    
            var isMammaryTumorsParameter = isMammaryTumors.HasValue ?
                new ObjectParameter("isMammaryTumors", isMammaryTumors) :
                new ObjectParameter("isMammaryTumors", typeof(bool));
    
            var isAbnormalTesticlesParameter = isAbnormalTesticles.HasValue ?
                new ObjectParameter("isAbnormalTesticles", isAbnormalTesticles) :
                new ObjectParameter("isAbnormalTesticles", typeof(bool));
    
            var isBloodSeenParameter = isBloodSeen.HasValue ?
                new ObjectParameter("isBloodSeen", isBloodSeen) :
                new ObjectParameter("isBloodSeen", typeof(bool));
    
            var isMusculoskeletalNormalParameter = isMusculoskeletalNormal.HasValue ?
                new ObjectParameter("isMusculoskeletalNormal", isMusculoskeletalNormal) :
                new ObjectParameter("isMusculoskeletalNormal", typeof(bool));
    
            var isJointProblemsParameter = isJointProblems.HasValue ?
                new ObjectParameter("isJointProblems", isJointProblems) :
                new ObjectParameter("isJointProblems", typeof(bool));
    
            var isNailProblemsParameter = isNailProblems.HasValue ?
                new ObjectParameter("isNailProblems", isNailProblems) :
                new ObjectParameter("isNailProblems", typeof(bool));
    
            var isLamenessLFParameter = isLamenessLF.HasValue ?
                new ObjectParameter("isLamenessLF", isLamenessLF) :
                new ObjectParameter("isLamenessLF", typeof(bool));
    
            var isLamenessRFParameter = isLamenessRF.HasValue ?
                new ObjectParameter("isLamenessRF", isLamenessRF) :
                new ObjectParameter("isLamenessRF", typeof(bool));
    
            var isLamenessLRParameter = isLamenessLR.HasValue ?
                new ObjectParameter("isLamenessLR", isLamenessLR) :
                new ObjectParameter("isLamenessLR", typeof(bool));
    
            var isLamenessRRParameter = isLamenessRR.HasValue ?
                new ObjectParameter("isLamenessRR", isLamenessRR) :
                new ObjectParameter("isLamenessRR", typeof(bool));
    
            var isLigamentsParameter = isLigaments.HasValue ?
                new ObjectParameter("isLigaments", isLigaments) :
                new ObjectParameter("isLigaments", typeof(bool));
    
            var isLungNormalParameter = isLungNormal.HasValue ?
                new ObjectParameter("isLungNormal", isLungNormal) :
                new ObjectParameter("isLungNormal", typeof(bool));
    
            var isBreathingDifficultyParameter = isBreathingDifficulty.HasValue ?
                new ObjectParameter("isBreathingDifficulty", isBreathingDifficulty) :
                new ObjectParameter("isBreathingDifficulty", typeof(bool));
    
            var isRapidRespirationParameter = isRapidRespiration.HasValue ?
                new ObjectParameter("isRapidRespiration", isRapidRespiration) :
                new ObjectParameter("isRapidRespiration", typeof(bool));
    
            var isTrachealPinchPositiveParameter = isTrachealPinchPositive.HasValue ?
                new ObjectParameter("isTrachealPinchPositive", isTrachealPinchPositive) :
                new ObjectParameter("isTrachealPinchPositive", typeof(bool));
    
            var isTrachealPinchNegativeParameter = isTrachealPinchNegative.HasValue ?
                new ObjectParameter("isTrachealPinchNegative", isTrachealPinchNegative) :
                new ObjectParameter("isTrachealPinchNegative", typeof(bool));
    
            var isCongestionParameter = isCongestion.HasValue ?
                new ObjectParameter("isCongestion", isCongestion) :
                new ObjectParameter("isCongestion", typeof(bool));
    
            var isAbnormalSoundParameter = isAbnormalSound.HasValue ?
                new ObjectParameter("isAbnormalSound", isAbnormalSound) :
                new ObjectParameter("isAbnormalSound", typeof(bool));
    
            var isHeartNormalParameter = isHeartNormal.HasValue ?
                new ObjectParameter("isHeartNormal", isHeartNormal) :
                new ObjectParameter("isHeartNormal", typeof(bool));
    
            var isMurMurParameter = isMurMur.HasValue ?
                new ObjectParameter("isMurMur", isMurMur) :
                new ObjectParameter("isMurMur", typeof(bool));
    
            var isFastParameter = isFast.HasValue ?
                new ObjectParameter("isFast", isFast) :
                new ObjectParameter("isFast", typeof(bool));
    
            var isSlowParameter = isSlow.HasValue ?
                new ObjectParameter("isSlow", isSlow) :
                new ObjectParameter("isSlow", typeof(bool));
    
            var isMuffledParameter = isMuffled.HasValue ?
                new ObjectParameter("isMuffled", isMuffled) :
                new ObjectParameter("isMuffled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPetVisit", dblWeightParameter, dblTemperatureParameter, intHeartRateParameter, intRespRateParameter, intCapillaryRefillTimeParameter, strMucousMembraneParameter, intVisitServiceIDParameter, strNotesParameter, isEyeNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isEyeInflamedParameter, isEyelidTumorParameter, isEarNormalParameter, isEarInflamedParameter, isEarTumorParameter, isDirtyParameter, isEarPainfulParameter, isExcessiveHairParameter, isSkinNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isSkinParasitesParameter, isMouthNormalParameter, isMouthTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, isNoseThroatNormalParameter, isLargeLymphNodesParameter, isInflamedThroatParameter, isNasalDishchargeParameter, isInflamedTonsilsParameter, isGINormalParameter, isExcessiveGasParameter, isGIParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter, isNeurologicalNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, isAbdomenNormalParameter, isAbnormalMassParameter, isAbdomenPainfulParameter, isBloatedParameter, isEnlargedParameter, isFluidParameter, isHerniaParameter, isUrogenitalNormalParameter, isUrogenAbnormalUrinationParameter, isGenitalDischargeParameter, isAnalSacsParameter, isRectalParameter, isMammaryTumorsParameter, isAbnormalTesticlesParameter, isBloodSeenParameter, isMusculoskeletalNormalParameter, isJointProblemsParameter, isNailProblemsParameter, isLamenessLFParameter, isLamenessRFParameter, isLamenessLRParameter, isLamenessRRParameter, isLigamentsParameter, isLungNormalParameter, isBreathingDifficultyParameter, isRapidRespirationParameter, isTrachealPinchPositiveParameter, isTrachealPinchNegativeParameter, isCongestionParameter, isAbnormalSoundParameter, isHeartNormalParameter, isMurMurParameter, isFastParameter, isSlowParameter, isMuffledParameter);
        }
    
        public virtual int uspAddService(string strServiceDesc, Nullable<int> intServiceTypeID, Nullable<decimal> dblPrice)
        {
            var strServiceDescParameter = strServiceDesc != null ?
                new ObjectParameter("strServiceDesc", strServiceDesc) :
                new ObjectParameter("strServiceDesc", typeof(string));
    
            var intServiceTypeIDParameter = intServiceTypeID.HasValue ?
                new ObjectParameter("intServiceTypeID", intServiceTypeID) :
                new ObjectParameter("intServiceTypeID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddService", strServiceDescParameter, intServiceTypeIDParameter, dblPriceParameter);
        }
    
        public virtual int uspAddSkinInfo(Nullable<bool> isNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isParasites, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddSkinInfo", isNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isParasitesParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddUrogenitalInfos(Nullable<bool> isNormal, Nullable<bool> isAbnormalUrination, Nullable<bool> isGenitalDischarge, Nullable<bool> isAnalSacs, Nullable<bool> isRectal, Nullable<bool> isMammaryTumors, Nullable<bool> isAbnormalTesticles, Nullable<bool> isBloodSeen, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isAbnormalUrinationParameter = isAbnormalUrination.HasValue ?
                new ObjectParameter("isAbnormalUrination", isAbnormalUrination) :
                new ObjectParameter("isAbnormalUrination", typeof(bool));
    
            var isGenitalDischargeParameter = isGenitalDischarge.HasValue ?
                new ObjectParameter("isGenitalDischarge", isGenitalDischarge) :
                new ObjectParameter("isGenitalDischarge", typeof(bool));
    
            var isAnalSacsParameter = isAnalSacs.HasValue ?
                new ObjectParameter("isAnalSacs", isAnalSacs) :
                new ObjectParameter("isAnalSacs", typeof(bool));
    
            var isRectalParameter = isRectal.HasValue ?
                new ObjectParameter("isRectal", isRectal) :
                new ObjectParameter("isRectal", typeof(bool));
    
            var isMammaryTumorsParameter = isMammaryTumors.HasValue ?
                new ObjectParameter("isMammaryTumors", isMammaryTumors) :
                new ObjectParameter("isMammaryTumors", typeof(bool));
    
            var isAbnormalTesticlesParameter = isAbnormalTesticles.HasValue ?
                new ObjectParameter("isAbnormalTesticles", isAbnormalTesticles) :
                new ObjectParameter("isAbnormalTesticles", typeof(bool));
    
            var isBloodSeenParameter = isBloodSeen.HasValue ?
                new ObjectParameter("isBloodSeen", isBloodSeen) :
                new ObjectParameter("isBloodSeen", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUrogenitalInfos", isNormalParameter, isAbnormalUrinationParameter, isGenitalDischargeParameter, isAnalSacsParameter, isRectalParameter, isMammaryTumorsParameter, isAbnormalTesticlesParameter, isBloodSeenParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddVaccinations(Nullable<int> intVisitServiceID, Nullable<System.DateTime> dtmDateOfVaccination, Nullable<System.DateTime> dtmDateOfExpiration, string strVaccineDesc, string strRabiesNumber)
        {
            var intVisitServiceIDParameter = intVisitServiceID.HasValue ?
                new ObjectParameter("intVisitServiceID", intVisitServiceID) :
                new ObjectParameter("intVisitServiceID", typeof(int));
    
            var dtmDateOfVaccinationParameter = dtmDateOfVaccination.HasValue ?
                new ObjectParameter("dtmDateOfVaccination", dtmDateOfVaccination) :
                new ObjectParameter("dtmDateOfVaccination", typeof(System.DateTime));
    
            var dtmDateOfExpirationParameter = dtmDateOfExpiration.HasValue ?
                new ObjectParameter("dtmDateOfExpiration", dtmDateOfExpiration) :
                new ObjectParameter("dtmDateOfExpiration", typeof(System.DateTime));
    
            var strVaccineDescParameter = strVaccineDesc != null ?
                new ObjectParameter("strVaccineDesc", strVaccineDesc) :
                new ObjectParameter("strVaccineDesc", typeof(string));
    
            var strRabiesNumberParameter = strRabiesNumber != null ?
                new ObjectParameter("strRabiesNumber", strRabiesNumber) :
                new ObjectParameter("strRabiesNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVaccinations", intVisitServiceIDParameter, dtmDateOfVaccinationParameter, dtmDateOfExpirationParameter, strVaccineDescParameter, strRabiesNumberParameter);
        }
    
        public virtual int uspAddVisit(Nullable<int> intPetID, Nullable<int> intVisitReasonID, Nullable<System.DateTime> dtmDateOfVist)
        {
            var intPetIDParameter = intPetID.HasValue ?
                new ObjectParameter("intPetID", intPetID) :
                new ObjectParameter("intPetID", typeof(int));
    
            var intVisitReasonIDParameter = intVisitReasonID.HasValue ?
                new ObjectParameter("intVisitReasonID", intVisitReasonID) :
                new ObjectParameter("intVisitReasonID", typeof(int));
    
            var dtmDateOfVistParameter = dtmDateOfVist.HasValue ?
                new ObjectParameter("dtmDateOfVist", dtmDateOfVist) :
                new ObjectParameter("dtmDateOfVist", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisit", intPetIDParameter, intVisitReasonIDParameter, dtmDateOfVistParameter);
        }
    
        public virtual int uspAddVisitEmployee(Nullable<int> intVisitID, Nullable<int> intEmployeeID)
        {
            var intVisitIDParameter = intVisitID.HasValue ?
                new ObjectParameter("intVisitID", intVisitID) :
                new ObjectParameter("intVisitID", typeof(int));
    
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisitEmployee", intVisitIDParameter, intEmployeeIDParameter);
        }
    
        public virtual int uspAddVisitMedication(Nullable<int> intVisitID, Nullable<int> intMedicationID, Nullable<System.DateTime> dtmDatePrescribed, Nullable<int> intQuantity)
        {
            var intVisitIDParameter = intVisitID.HasValue ?
                new ObjectParameter("intVisitID", intVisitID) :
                new ObjectParameter("intVisitID", typeof(int));
    
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            var dtmDatePrescribedParameter = dtmDatePrescribed.HasValue ?
                new ObjectParameter("dtmDatePrescribed", dtmDatePrescribed) :
                new ObjectParameter("dtmDatePrescribed", typeof(System.DateTime));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisitMedication", intVisitIDParameter, intMedicationIDParameter, dtmDatePrescribedParameter, intQuantityParameter);
        }
    
        public virtual int uspAddVisitService(Nullable<int> intVisitID, Nullable<int> intServiceID)
        {
            var intVisitIDParameter = intVisitID.HasValue ?
                new ObjectParameter("intVisitID", intVisitID) :
                new ObjectParameter("intVisitID", typeof(int));
    
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisitService", intVisitIDParameter, intServiceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckEmployees(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckEmployees", intEmployeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckMedication(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckMedication", intMedicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckServices(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckServices", intServiceIDParameter);
        }
    
        public virtual int uspCleanDatabase()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspCleanDatabase");
        }
    
        public virtual int uspDeleteEmployee(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteEmployee", intEmployeeIDParameter);
        }
    
        public virtual int uspDeleteMedication(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteMedication", intMedicationIDParameter);
        }
    
        public virtual int uspDeleteService(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteService", intServiceIDParameter);
        }
    
        public virtual int uspDropUserForeignKeys()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDropUserForeignKeys");
        }
    
        public virtual int uspDropUserStoredProcedures()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDropUserStoredProcedures");
        }
    
        public virtual int uspDropUserTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDropUserTables");
        }
    
        public virtual int uspDropUserViews()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDropUserViews");
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserOwnerID(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserOwnerID", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserRole(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserRole", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual int uspUpdateEmployee(Nullable<int> intEmployeeID, string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateEmployee", intEmployeeIDParameter, strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspUpdateMedication(Nullable<int> intMedicationID, string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateMedication", intMedicationIDParameter, strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspUpdateOwner(Nullable<int> intOwnerID, string strFirstName, string strLastName, Nullable<int> intGenderID, string strAddress, string strCity, Nullable<int> intStateID, string strZip, string strPhoneNumber, string strEmail, string strOwner2Name, string strOwner2PhoneNumber, string strOwner2Email, string strNotes, Nullable<int> intUserID)
        {
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intStateIDParameter = intStateID.HasValue ?
                new ObjectParameter("intStateID", intStateID) :
                new ObjectParameter("intStateID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strPhoneNumberParameter = strPhoneNumber != null ?
                new ObjectParameter("strPhoneNumber", strPhoneNumber) :
                new ObjectParameter("strPhoneNumber", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strOwner2NameParameter = strOwner2Name != null ?
                new ObjectParameter("strOwner2Name", strOwner2Name) :
                new ObjectParameter("strOwner2Name", typeof(string));
    
            var strOwner2PhoneNumberParameter = strOwner2PhoneNumber != null ?
                new ObjectParameter("strOwner2PhoneNumber", strOwner2PhoneNumber) :
                new ObjectParameter("strOwner2PhoneNumber", typeof(string));
    
            var strOwner2EmailParameter = strOwner2Email != null ?
                new ObjectParameter("strOwner2Email", strOwner2Email) :
                new ObjectParameter("strOwner2Email", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateOwner", intOwnerIDParameter, strFirstNameParameter, strLastNameParameter, intGenderIDParameter, strAddressParameter, strCityParameter, intStateIDParameter, strZipParameter, strPhoneNumberParameter, strEmailParameter, strOwner2NameParameter, strOwner2PhoneNumberParameter, strOwner2EmailParameter, strNotesParameter, intUserIDParameter);
        }
    
        public virtual int uspUpdateService(Nullable<int> intServiceID, string strServiceDesc, Nullable<int> intServiceTypeID, Nullable<decimal> dblPrice)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            var strServiceDescParameter = strServiceDesc != null ?
                new ObjectParameter("strServiceDesc", strServiceDesc) :
                new ObjectParameter("strServiceDesc", typeof(string));
    
            var intServiceTypeIDParameter = intServiceTypeID.HasValue ?
                new ObjectParameter("intServiceTypeID", intServiceTypeID) :
                new ObjectParameter("intServiceTypeID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateService", intServiceIDParameter, strServiceDescParameter, intServiceTypeIDParameter, dblPriceParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUserLogin(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUserLogin", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<uspViewEmployees_Result> uspViewEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewEmployees_Result>("uspViewEmployees");
        }
    
        public virtual ObjectResult<uspViewMedications_Result> uspViewMedications()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewMedications_Result>("uspViewMedications");
        }
    
        public virtual ObjectResult<uspViewOwners_Result> uspViewOwners()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwners_Result>("uspViewOwners");
        }
    
        public virtual ObjectResult<uspViewPetGeneralInformation_Result> uspViewPetGeneralInformation()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetGeneralInformation_Result>("uspViewPetGeneralInformation");
        }
    
        public virtual ObjectResult<uspViewPetMedications_Result> uspViewPetMedications()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetMedications_Result>("uspViewPetMedications");
        }
    
        public virtual ObjectResult<uspViewPets_Result> uspViewPets()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPets_Result>("uspViewPets");
        }
    
        public virtual ObjectResult<uspViewPetVaccinations_Result> uspViewPetVaccinations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVaccinations_Result>("uspViewPetVaccinations");
        }
    
        public virtual ObjectResult<uspViewPetVisits_Result> uspViewPetVisits()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisits_Result>("uspViewPetVisits");
        }
    
        public virtual ObjectResult<uspViewServices_Result> uspViewServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewServices_Result>("uspViewServices");
        }
    
        public virtual int uspAddAbdomenInfos1(Nullable<bool> isNormal, Nullable<bool> isAbnormalMass, Nullable<bool> isPainful, Nullable<bool> isBloated, Nullable<bool> isEnlarged, Nullable<bool> isFluid, Nullable<bool> isHernia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isAbnormalMassParameter = isAbnormalMass.HasValue ?
                new ObjectParameter("isAbnormalMass", isAbnormalMass) :
                new ObjectParameter("isAbnormalMass", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isBloatedParameter = isBloated.HasValue ?
                new ObjectParameter("isBloated", isBloated) :
                new ObjectParameter("isBloated", typeof(bool));
    
            var isEnlargedParameter = isEnlarged.HasValue ?
                new ObjectParameter("isEnlarged", isEnlarged) :
                new ObjectParameter("isEnlarged", typeof(bool));
    
            var isFluidParameter = isFluid.HasValue ?
                new ObjectParameter("isFluid", isFluid) :
                new ObjectParameter("isFluid", typeof(bool));
    
            var isHerniaParameter = isHernia.HasValue ?
                new ObjectParameter("isHernia", isHernia) :
                new ObjectParameter("isHernia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddAbdomenInfos1", isNormalParameter, isAbnormalMassParameter, isPainfulParameter, isBloatedParameter, isEnlargedParameter, isFluidParameter, isHerniaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddHealthExam1(Nullable<double> dblWeight, Nullable<double> dblTemperature, Nullable<int> intHeartRate, Nullable<int> intRespRate, Nullable<int> intCapillaryRefillTime, string strMucousMembrane, Nullable<int> intVisitServiceID, string strNotes)
        {
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var dblTemperatureParameter = dblTemperature.HasValue ?
                new ObjectParameter("dblTemperature", dblTemperature) :
                new ObjectParameter("dblTemperature", typeof(double));
    
            var intHeartRateParameter = intHeartRate.HasValue ?
                new ObjectParameter("intHeartRate", intHeartRate) :
                new ObjectParameter("intHeartRate", typeof(int));
    
            var intRespRateParameter = intRespRate.HasValue ?
                new ObjectParameter("intRespRate", intRespRate) :
                new ObjectParameter("intRespRate", typeof(int));
    
            var intCapillaryRefillTimeParameter = intCapillaryRefillTime.HasValue ?
                new ObjectParameter("intCapillaryRefillTime", intCapillaryRefillTime) :
                new ObjectParameter("intCapillaryRefillTime", typeof(int));
    
            var strMucousMembraneParameter = strMucousMembrane != null ?
                new ObjectParameter("strMucousMembrane", strMucousMembrane) :
                new ObjectParameter("strMucousMembrane", typeof(string));
    
            var intVisitServiceIDParameter = intVisitServiceID.HasValue ?
                new ObjectParameter("intVisitServiceID", intVisitServiceID) :
                new ObjectParameter("intVisitServiceID", typeof(int));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddHealthExam1", dblWeightParameter, dblTemperatureParameter, intHeartRateParameter, intRespRateParameter, intCapillaryRefillTimeParameter, strMucousMembraneParameter, intVisitServiceIDParameter, strNotesParameter);
        }
    
        public virtual int uspAddHeartInfos1(Nullable<bool> isNormal, Nullable<bool> isMurMur, Nullable<bool> isFast, Nullable<bool> isSlow, Nullable<bool> isMuffled, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isMurMurParameter = isMurMur.HasValue ?
                new ObjectParameter("isMurMur", isMurMur) :
                new ObjectParameter("isMurMur", typeof(bool));
    
            var isFastParameter = isFast.HasValue ?
                new ObjectParameter("isFast", isFast) :
                new ObjectParameter("isFast", typeof(bool));
    
            var isSlowParameter = isSlow.HasValue ?
                new ObjectParameter("isSlow", isSlow) :
                new ObjectParameter("isSlow", typeof(bool));
    
            var isMuffledParameter = isMuffled.HasValue ?
                new ObjectParameter("isMuffled", isMuffled) :
                new ObjectParameter("isMuffled", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddHeartInfos1", isNormalParameter, isMurMurParameter, isFastParameter, isSlowParameter, isMuffledParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddLunglInfos1(Nullable<bool> isNormal, Nullable<bool> isBreathingDifficulty, Nullable<bool> isRapidRespiration, Nullable<bool> isTrachealPinchPositive, Nullable<bool> isTrachealPinchNegative, Nullable<bool> isCongestion, Nullable<bool> isAbnormalSound, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isBreathingDifficultyParameter = isBreathingDifficulty.HasValue ?
                new ObjectParameter("isBreathingDifficulty", isBreathingDifficulty) :
                new ObjectParameter("isBreathingDifficulty", typeof(bool));
    
            var isRapidRespirationParameter = isRapidRespiration.HasValue ?
                new ObjectParameter("isRapidRespiration", isRapidRespiration) :
                new ObjectParameter("isRapidRespiration", typeof(bool));
    
            var isTrachealPinchPositiveParameter = isTrachealPinchPositive.HasValue ?
                new ObjectParameter("isTrachealPinchPositive", isTrachealPinchPositive) :
                new ObjectParameter("isTrachealPinchPositive", typeof(bool));
    
            var isTrachealPinchNegativeParameter = isTrachealPinchNegative.HasValue ?
                new ObjectParameter("isTrachealPinchNegative", isTrachealPinchNegative) :
                new ObjectParameter("isTrachealPinchNegative", typeof(bool));
    
            var isCongestionParameter = isCongestion.HasValue ?
                new ObjectParameter("isCongestion", isCongestion) :
                new ObjectParameter("isCongestion", typeof(bool));
    
            var isAbnormalSoundParameter = isAbnormalSound.HasValue ?
                new ObjectParameter("isAbnormalSound", isAbnormalSound) :
                new ObjectParameter("isAbnormalSound", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddLunglInfos1", isNormalParameter, isBreathingDifficultyParameter, isRapidRespirationParameter, isTrachealPinchPositiveParameter, isTrachealPinchNegativeParameter, isCongestionParameter, isAbnormalSoundParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMusculoskeletalInfos1(Nullable<bool> isNormal, Nullable<bool> isJointProblems, Nullable<bool> isNailProblems, Nullable<bool> isLamenessLF, Nullable<bool> isLamenessRF, Nullable<bool> isLamenessLR, Nullable<bool> isLamenessRR, Nullable<bool> isLigaments, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isJointProblemsParameter = isJointProblems.HasValue ?
                new ObjectParameter("isJointProblems", isJointProblems) :
                new ObjectParameter("isJointProblems", typeof(bool));
    
            var isNailProblemsParameter = isNailProblems.HasValue ?
                new ObjectParameter("isNailProblems", isNailProblems) :
                new ObjectParameter("isNailProblems", typeof(bool));
    
            var isLamenessLFParameter = isLamenessLF.HasValue ?
                new ObjectParameter("isLamenessLF", isLamenessLF) :
                new ObjectParameter("isLamenessLF", typeof(bool));
    
            var isLamenessRFParameter = isLamenessRF.HasValue ?
                new ObjectParameter("isLamenessRF", isLamenessRF) :
                new ObjectParameter("isLamenessRF", typeof(bool));
    
            var isLamenessLRParameter = isLamenessLR.HasValue ?
                new ObjectParameter("isLamenessLR", isLamenessLR) :
                new ObjectParameter("isLamenessLR", typeof(bool));
    
            var isLamenessRRParameter = isLamenessRR.HasValue ?
                new ObjectParameter("isLamenessRR", isLamenessRR) :
                new ObjectParameter("isLamenessRR", typeof(bool));
    
            var isLigamentsParameter = isLigaments.HasValue ?
                new ObjectParameter("isLigaments", isLigaments) :
                new ObjectParameter("isLigaments", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMusculoskeletalInfos1", isNormalParameter, isJointProblemsParameter, isNailProblemsParameter, isLamenessLFParameter, isLamenessRFParameter, isLamenessLRParameter, isLamenessRRParameter, isLigamentsParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNoseThroatInfo1(Nullable<bool> isNormal, Nullable<bool> isLargeLymphNodes, Nullable<bool> isInflamedThroat, Nullable<bool> isNasalDishcharge, Nullable<bool> isInflamedTonsils, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isLargeLymphNodesParameter = isLargeLymphNodes.HasValue ?
                new ObjectParameter("isLargeLymphNodes", isLargeLymphNodes) :
                new ObjectParameter("isLargeLymphNodes", typeof(bool));
    
            var isInflamedThroatParameter = isInflamedThroat.HasValue ?
                new ObjectParameter("isInflamedThroat", isInflamedThroat) :
                new ObjectParameter("isInflamedThroat", typeof(bool));
    
            var isNasalDishchargeParameter = isNasalDishcharge.HasValue ?
                new ObjectParameter("isNasalDishcharge", isNasalDishcharge) :
                new ObjectParameter("isNasalDishcharge", typeof(bool));
    
            var isInflamedTonsilsParameter = isInflamedTonsils.HasValue ?
                new ObjectParameter("isInflamedTonsils", isInflamedTonsils) :
                new ObjectParameter("isInflamedTonsils", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNoseThroatInfo1", isNormalParameter, isLargeLymphNodesParameter, isInflamedThroatParameter, isNasalDishchargeParameter, isInflamedTonsilsParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddOwner1(string strFirstName, string strLastName, Nullable<int> intGenderID, string strAddress, string strCity, Nullable<int> intStateID, string strZip, string strPhoneNumber, string strEmail, string strOwner2Name, string strOwner2PhoneNumber, string strOwner2Email, string strNotes, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intStateIDParameter = intStateID.HasValue ?
                new ObjectParameter("intStateID", intStateID) :
                new ObjectParameter("intStateID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strPhoneNumberParameter = strPhoneNumber != null ?
                new ObjectParameter("strPhoneNumber", strPhoneNumber) :
                new ObjectParameter("strPhoneNumber", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strOwner2NameParameter = strOwner2Name != null ?
                new ObjectParameter("strOwner2Name", strOwner2Name) :
                new ObjectParameter("strOwner2Name", typeof(string));
    
            var strOwner2PhoneNumberParameter = strOwner2PhoneNumber != null ?
                new ObjectParameter("strOwner2PhoneNumber", strOwner2PhoneNumber) :
                new ObjectParameter("strOwner2PhoneNumber", typeof(string));
    
            var strOwner2EmailParameter = strOwner2Email != null ?
                new ObjectParameter("strOwner2Email", strOwner2Email) :
                new ObjectParameter("strOwner2Email", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddOwner1", strFirstNameParameter, strLastNameParameter, intGenderIDParameter, strAddressParameter, strCityParameter, intStateIDParameter, strZipParameter, strPhoneNumberParameter, strEmailParameter, strOwner2NameParameter, strOwner2PhoneNumberParameter, strOwner2EmailParameter, strNotesParameter, intUserIDParameter);
        }
    
        public virtual int uspAddPetVisit1(Nullable<double> dblWeight, Nullable<double> dblTemperature, Nullable<int> intHeartRate, Nullable<int> intRespRate, Nullable<int> intCapillaryRefillTime, string strMucousMembrane, Nullable<int> intVisitServiceID, string strNotes, Nullable<bool> isEyeNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isEyeInflamed, Nullable<bool> isEyelidTumor, Nullable<bool> isEarNormal, Nullable<bool> isEarInflamed, Nullable<bool> isEarTumor, Nullable<bool> isDirty, Nullable<bool> isEarPainful, Nullable<bool> isExcessiveHair, Nullable<bool> isSkinNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isSkinParasites, Nullable<bool> isMouthNormal, Nullable<bool> isMouthTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<bool> isNoseThroatNormal, Nullable<bool> isLargeLymphNodes, Nullable<bool> isInflamedThroat, Nullable<bool> isNasalDishcharge, Nullable<bool> isInflamedTonsils, Nullable<bool> isGINormal, Nullable<bool> isExcessiveGas, Nullable<bool> isGIParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<bool> isNeurologicalNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<bool> isAbdomenNormal, Nullable<bool> isAbnormalMass, Nullable<bool> isAbdomenPainful, Nullable<bool> isBloated, Nullable<bool> isEnlarged, Nullable<bool> isFluid, Nullable<bool> isHernia, Nullable<bool> isUrogenitalNormal, Nullable<bool> isUrogenAbnormalUrination, Nullable<bool> isGenitalDischarge, Nullable<bool> isAnalSacs, Nullable<bool> isRectal, Nullable<bool> isMammaryTumors, Nullable<bool> isAbnormalTesticles, Nullable<bool> isBloodSeen, Nullable<bool> isMusculoskeletalNormal, Nullable<bool> isJointProblems, Nullable<bool> isNailProblems, Nullable<bool> isLamenessLF, Nullable<bool> isLamenessRF, Nullable<bool> isLamenessLR, Nullable<bool> isLamenessRR, Nullable<bool> isLigaments, Nullable<bool> isLungNormal, Nullable<bool> isBreathingDifficulty, Nullable<bool> isRapidRespiration, Nullable<bool> isTrachealPinchPositive, Nullable<bool> isTrachealPinchNegative, Nullable<bool> isCongestion, Nullable<bool> isAbnormalSound, Nullable<bool> isHeartNormal, Nullable<bool> isMurMur, Nullable<bool> isFast, Nullable<bool> isSlow, Nullable<bool> isMuffled)
        {
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var dblTemperatureParameter = dblTemperature.HasValue ?
                new ObjectParameter("dblTemperature", dblTemperature) :
                new ObjectParameter("dblTemperature", typeof(double));
    
            var intHeartRateParameter = intHeartRate.HasValue ?
                new ObjectParameter("intHeartRate", intHeartRate) :
                new ObjectParameter("intHeartRate", typeof(int));
    
            var intRespRateParameter = intRespRate.HasValue ?
                new ObjectParameter("intRespRate", intRespRate) :
                new ObjectParameter("intRespRate", typeof(int));
    
            var intCapillaryRefillTimeParameter = intCapillaryRefillTime.HasValue ?
                new ObjectParameter("intCapillaryRefillTime", intCapillaryRefillTime) :
                new ObjectParameter("intCapillaryRefillTime", typeof(int));
    
            var strMucousMembraneParameter = strMucousMembrane != null ?
                new ObjectParameter("strMucousMembrane", strMucousMembrane) :
                new ObjectParameter("strMucousMembrane", typeof(string));
    
            var intVisitServiceIDParameter = intVisitServiceID.HasValue ?
                new ObjectParameter("intVisitServiceID", intVisitServiceID) :
                new ObjectParameter("intVisitServiceID", typeof(int));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var isEyeNormalParameter = isEyeNormal.HasValue ?
                new ObjectParameter("isEyeNormal", isEyeNormal) :
                new ObjectParameter("isEyeNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isEyeInflamedParameter = isEyeInflamed.HasValue ?
                new ObjectParameter("isEyeInflamed", isEyeInflamed) :
                new ObjectParameter("isEyeInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var isEarNormalParameter = isEarNormal.HasValue ?
                new ObjectParameter("isEarNormal", isEarNormal) :
                new ObjectParameter("isEarNormal", typeof(bool));
    
            var isEarInflamedParameter = isEarInflamed.HasValue ?
                new ObjectParameter("isEarInflamed", isEarInflamed) :
                new ObjectParameter("isEarInflamed", typeof(bool));
    
            var isEarTumorParameter = isEarTumor.HasValue ?
                new ObjectParameter("isEarTumor", isEarTumor) :
                new ObjectParameter("isEarTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isEarPainfulParameter = isEarPainful.HasValue ?
                new ObjectParameter("isEarPainful", isEarPainful) :
                new ObjectParameter("isEarPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var isSkinNormalParameter = isSkinNormal.HasValue ?
                new ObjectParameter("isSkinNormal", isSkinNormal) :
                new ObjectParameter("isSkinNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isSkinParasitesParameter = isSkinParasites.HasValue ?
                new ObjectParameter("isSkinParasites", isSkinParasites) :
                new ObjectParameter("isSkinParasites", typeof(bool));
    
            var isMouthNormalParameter = isMouthNormal.HasValue ?
                new ObjectParameter("isMouthNormal", isMouthNormal) :
                new ObjectParameter("isMouthNormal", typeof(bool));
    
            var isMouthTumorParameter = isMouthTumor.HasValue ?
                new ObjectParameter("isMouthTumor", isMouthTumor) :
                new ObjectParameter("isMouthTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var isNoseThroatNormalParameter = isNoseThroatNormal.HasValue ?
                new ObjectParameter("isNoseThroatNormal", isNoseThroatNormal) :
                new ObjectParameter("isNoseThroatNormal", typeof(bool));
    
            var isLargeLymphNodesParameter = isLargeLymphNodes.HasValue ?
                new ObjectParameter("isLargeLymphNodes", isLargeLymphNodes) :
                new ObjectParameter("isLargeLymphNodes", typeof(bool));
    
            var isInflamedThroatParameter = isInflamedThroat.HasValue ?
                new ObjectParameter("isInflamedThroat", isInflamedThroat) :
                new ObjectParameter("isInflamedThroat", typeof(bool));
    
            var isNasalDishchargeParameter = isNasalDishcharge.HasValue ?
                new ObjectParameter("isNasalDishcharge", isNasalDishcharge) :
                new ObjectParameter("isNasalDishcharge", typeof(bool));
    
            var isInflamedTonsilsParameter = isInflamedTonsils.HasValue ?
                new ObjectParameter("isInflamedTonsils", isInflamedTonsils) :
                new ObjectParameter("isInflamedTonsils", typeof(bool));
    
            var isGINormalParameter = isGINormal.HasValue ?
                new ObjectParameter("isGINormal", isGINormal) :
                new ObjectParameter("isGINormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isGIParasitesParameter = isGIParasites.HasValue ?
                new ObjectParameter("isGIParasites", isGIParasites) :
                new ObjectParameter("isGIParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var isNeurologicalNormalParameter = isNeurologicalNormal.HasValue ?
                new ObjectParameter("isNeurologicalNormal", isNeurologicalNormal) :
                new ObjectParameter("isNeurologicalNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var isAbdomenNormalParameter = isAbdomenNormal.HasValue ?
                new ObjectParameter("isAbdomenNormal", isAbdomenNormal) :
                new ObjectParameter("isAbdomenNormal", typeof(bool));
    
            var isAbnormalMassParameter = isAbnormalMass.HasValue ?
                new ObjectParameter("isAbnormalMass", isAbnormalMass) :
                new ObjectParameter("isAbnormalMass", typeof(bool));
    
            var isAbdomenPainfulParameter = isAbdomenPainful.HasValue ?
                new ObjectParameter("isAbdomenPainful", isAbdomenPainful) :
                new ObjectParameter("isAbdomenPainful", typeof(bool));
    
            var isBloatedParameter = isBloated.HasValue ?
                new ObjectParameter("isBloated", isBloated) :
                new ObjectParameter("isBloated", typeof(bool));
    
            var isEnlargedParameter = isEnlarged.HasValue ?
                new ObjectParameter("isEnlarged", isEnlarged) :
                new ObjectParameter("isEnlarged", typeof(bool));
    
            var isFluidParameter = isFluid.HasValue ?
                new ObjectParameter("isFluid", isFluid) :
                new ObjectParameter("isFluid", typeof(bool));
    
            var isHerniaParameter = isHernia.HasValue ?
                new ObjectParameter("isHernia", isHernia) :
                new ObjectParameter("isHernia", typeof(bool));
    
            var isUrogenitalNormalParameter = isUrogenitalNormal.HasValue ?
                new ObjectParameter("isUrogenitalNormal", isUrogenitalNormal) :
                new ObjectParameter("isUrogenitalNormal", typeof(bool));
    
            var isUrogenAbnormalUrinationParameter = isUrogenAbnormalUrination.HasValue ?
                new ObjectParameter("isUrogenAbnormalUrination", isUrogenAbnormalUrination) :
                new ObjectParameter("isUrogenAbnormalUrination", typeof(bool));
    
            var isGenitalDischargeParameter = isGenitalDischarge.HasValue ?
                new ObjectParameter("isGenitalDischarge", isGenitalDischarge) :
                new ObjectParameter("isGenitalDischarge", typeof(bool));
    
            var isAnalSacsParameter = isAnalSacs.HasValue ?
                new ObjectParameter("isAnalSacs", isAnalSacs) :
                new ObjectParameter("isAnalSacs", typeof(bool));
    
            var isRectalParameter = isRectal.HasValue ?
                new ObjectParameter("isRectal", isRectal) :
                new ObjectParameter("isRectal", typeof(bool));
    
            var isMammaryTumorsParameter = isMammaryTumors.HasValue ?
                new ObjectParameter("isMammaryTumors", isMammaryTumors) :
                new ObjectParameter("isMammaryTumors", typeof(bool));
    
            var isAbnormalTesticlesParameter = isAbnormalTesticles.HasValue ?
                new ObjectParameter("isAbnormalTesticles", isAbnormalTesticles) :
                new ObjectParameter("isAbnormalTesticles", typeof(bool));
    
            var isBloodSeenParameter = isBloodSeen.HasValue ?
                new ObjectParameter("isBloodSeen", isBloodSeen) :
                new ObjectParameter("isBloodSeen", typeof(bool));
    
            var isMusculoskeletalNormalParameter = isMusculoskeletalNormal.HasValue ?
                new ObjectParameter("isMusculoskeletalNormal", isMusculoskeletalNormal) :
                new ObjectParameter("isMusculoskeletalNormal", typeof(bool));
    
            var isJointProblemsParameter = isJointProblems.HasValue ?
                new ObjectParameter("isJointProblems", isJointProblems) :
                new ObjectParameter("isJointProblems", typeof(bool));
    
            var isNailProblemsParameter = isNailProblems.HasValue ?
                new ObjectParameter("isNailProblems", isNailProblems) :
                new ObjectParameter("isNailProblems", typeof(bool));
    
            var isLamenessLFParameter = isLamenessLF.HasValue ?
                new ObjectParameter("isLamenessLF", isLamenessLF) :
                new ObjectParameter("isLamenessLF", typeof(bool));
    
            var isLamenessRFParameter = isLamenessRF.HasValue ?
                new ObjectParameter("isLamenessRF", isLamenessRF) :
                new ObjectParameter("isLamenessRF", typeof(bool));
    
            var isLamenessLRParameter = isLamenessLR.HasValue ?
                new ObjectParameter("isLamenessLR", isLamenessLR) :
                new ObjectParameter("isLamenessLR", typeof(bool));
    
            var isLamenessRRParameter = isLamenessRR.HasValue ?
                new ObjectParameter("isLamenessRR", isLamenessRR) :
                new ObjectParameter("isLamenessRR", typeof(bool));
    
            var isLigamentsParameter = isLigaments.HasValue ?
                new ObjectParameter("isLigaments", isLigaments) :
                new ObjectParameter("isLigaments", typeof(bool));
    
            var isLungNormalParameter = isLungNormal.HasValue ?
                new ObjectParameter("isLungNormal", isLungNormal) :
                new ObjectParameter("isLungNormal", typeof(bool));
    
            var isBreathingDifficultyParameter = isBreathingDifficulty.HasValue ?
                new ObjectParameter("isBreathingDifficulty", isBreathingDifficulty) :
                new ObjectParameter("isBreathingDifficulty", typeof(bool));
    
            var isRapidRespirationParameter = isRapidRespiration.HasValue ?
                new ObjectParameter("isRapidRespiration", isRapidRespiration) :
                new ObjectParameter("isRapidRespiration", typeof(bool));
    
            var isTrachealPinchPositiveParameter = isTrachealPinchPositive.HasValue ?
                new ObjectParameter("isTrachealPinchPositive", isTrachealPinchPositive) :
                new ObjectParameter("isTrachealPinchPositive", typeof(bool));
    
            var isTrachealPinchNegativeParameter = isTrachealPinchNegative.HasValue ?
                new ObjectParameter("isTrachealPinchNegative", isTrachealPinchNegative) :
                new ObjectParameter("isTrachealPinchNegative", typeof(bool));
    
            var isCongestionParameter = isCongestion.HasValue ?
                new ObjectParameter("isCongestion", isCongestion) :
                new ObjectParameter("isCongestion", typeof(bool));
    
            var isAbnormalSoundParameter = isAbnormalSound.HasValue ?
                new ObjectParameter("isAbnormalSound", isAbnormalSound) :
                new ObjectParameter("isAbnormalSound", typeof(bool));
    
            var isHeartNormalParameter = isHeartNormal.HasValue ?
                new ObjectParameter("isHeartNormal", isHeartNormal) :
                new ObjectParameter("isHeartNormal", typeof(bool));
    
            var isMurMurParameter = isMurMur.HasValue ?
                new ObjectParameter("isMurMur", isMurMur) :
                new ObjectParameter("isMurMur", typeof(bool));
    
            var isFastParameter = isFast.HasValue ?
                new ObjectParameter("isFast", isFast) :
                new ObjectParameter("isFast", typeof(bool));
    
            var isSlowParameter = isSlow.HasValue ?
                new ObjectParameter("isSlow", isSlow) :
                new ObjectParameter("isSlow", typeof(bool));
    
            var isMuffledParameter = isMuffled.HasValue ?
                new ObjectParameter("isMuffled", isMuffled) :
                new ObjectParameter("isMuffled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPetVisit1", dblWeightParameter, dblTemperatureParameter, intHeartRateParameter, intRespRateParameter, intCapillaryRefillTimeParameter, strMucousMembraneParameter, intVisitServiceIDParameter, strNotesParameter, isEyeNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isEyeInflamedParameter, isEyelidTumorParameter, isEarNormalParameter, isEarInflamedParameter, isEarTumorParameter, isDirtyParameter, isEarPainfulParameter, isExcessiveHairParameter, isSkinNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isSkinParasitesParameter, isMouthNormalParameter, isMouthTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, isNoseThroatNormalParameter, isLargeLymphNodesParameter, isInflamedThroatParameter, isNasalDishchargeParameter, isInflamedTonsilsParameter, isGINormalParameter, isExcessiveGasParameter, isGIParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, isNeurologicalNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, isAbdomenNormalParameter, isAbnormalMassParameter, isAbdomenPainfulParameter, isBloatedParameter, isEnlargedParameter, isFluidParameter, isHerniaParameter, isUrogenitalNormalParameter, isUrogenAbnormalUrinationParameter, isGenitalDischargeParameter, isAnalSacsParameter, isRectalParameter, isMammaryTumorsParameter, isAbnormalTesticlesParameter, isBloodSeenParameter, isMusculoskeletalNormalParameter, isJointProblemsParameter, isNailProblemsParameter, isLamenessLFParameter, isLamenessRFParameter, isLamenessLRParameter, isLamenessRRParameter, isLigamentsParameter, isLungNormalParameter, isBreathingDifficultyParameter, isRapidRespirationParameter, isTrachealPinchPositiveParameter, isTrachealPinchNegativeParameter, isCongestionParameter, isAbnormalSoundParameter, isHeartNormalParameter, isMurMurParameter, isFastParameter, isSlowParameter, isMuffledParameter);
        }
    
        public virtual int uspAddService1(string strServiceDesc, Nullable<int> intServiceTypeID, Nullable<decimal> dblPrice)
        {
            var strServiceDescParameter = strServiceDesc != null ?
                new ObjectParameter("strServiceDesc", strServiceDesc) :
                new ObjectParameter("strServiceDesc", typeof(string));
    
            var intServiceTypeIDParameter = intServiceTypeID.HasValue ?
                new ObjectParameter("intServiceTypeID", intServiceTypeID) :
                new ObjectParameter("intServiceTypeID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddService1", strServiceDescParameter, intServiceTypeIDParameter, dblPriceParameter);
        }
    
        public virtual int uspAddUrogenitalInfos1(Nullable<bool> isNormal, Nullable<bool> isAbnormalUrination, Nullable<bool> isGenitalDischarge, Nullable<bool> isAnalSacs, Nullable<bool> isRectal, Nullable<bool> isMammaryTumors, Nullable<bool> isAbnormalTesticles, Nullable<bool> isBloodSeen, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isAbnormalUrinationParameter = isAbnormalUrination.HasValue ?
                new ObjectParameter("isAbnormalUrination", isAbnormalUrination) :
                new ObjectParameter("isAbnormalUrination", typeof(bool));
    
            var isGenitalDischargeParameter = isGenitalDischarge.HasValue ?
                new ObjectParameter("isGenitalDischarge", isGenitalDischarge) :
                new ObjectParameter("isGenitalDischarge", typeof(bool));
    
            var isAnalSacsParameter = isAnalSacs.HasValue ?
                new ObjectParameter("isAnalSacs", isAnalSacs) :
                new ObjectParameter("isAnalSacs", typeof(bool));
    
            var isRectalParameter = isRectal.HasValue ?
                new ObjectParameter("isRectal", isRectal) :
                new ObjectParameter("isRectal", typeof(bool));
    
            var isMammaryTumorsParameter = isMammaryTumors.HasValue ?
                new ObjectParameter("isMammaryTumors", isMammaryTumors) :
                new ObjectParameter("isMammaryTumors", typeof(bool));
    
            var isAbnormalTesticlesParameter = isAbnormalTesticles.HasValue ?
                new ObjectParameter("isAbnormalTesticles", isAbnormalTesticles) :
                new ObjectParameter("isAbnormalTesticles", typeof(bool));
    
            var isBloodSeenParameter = isBloodSeen.HasValue ?
                new ObjectParameter("isBloodSeen", isBloodSeen) :
                new ObjectParameter("isBloodSeen", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUrogenitalInfos1", isNormalParameter, isAbnormalUrinationParameter, isGenitalDischargeParameter, isAnalSacsParameter, isRectalParameter, isMammaryTumorsParameter, isAbnormalTesticlesParameter, isBloodSeenParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddVaccinations1(Nullable<int> intVisitServiceID, Nullable<System.DateTime> dtmDateOfVaccination, Nullable<System.DateTime> dtmDateOfExpiration, string strVaccineDesc, string strRabiesNumber)
        {
            var intVisitServiceIDParameter = intVisitServiceID.HasValue ?
                new ObjectParameter("intVisitServiceID", intVisitServiceID) :
                new ObjectParameter("intVisitServiceID", typeof(int));
    
            var dtmDateOfVaccinationParameter = dtmDateOfVaccination.HasValue ?
                new ObjectParameter("dtmDateOfVaccination", dtmDateOfVaccination) :
                new ObjectParameter("dtmDateOfVaccination", typeof(System.DateTime));
    
            var dtmDateOfExpirationParameter = dtmDateOfExpiration.HasValue ?
                new ObjectParameter("dtmDateOfExpiration", dtmDateOfExpiration) :
                new ObjectParameter("dtmDateOfExpiration", typeof(System.DateTime));
    
            var strVaccineDescParameter = strVaccineDesc != null ?
                new ObjectParameter("strVaccineDesc", strVaccineDesc) :
                new ObjectParameter("strVaccineDesc", typeof(string));
    
            var strRabiesNumberParameter = strRabiesNumber != null ?
                new ObjectParameter("strRabiesNumber", strRabiesNumber) :
                new ObjectParameter("strRabiesNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVaccinations1", intVisitServiceIDParameter, dtmDateOfVaccinationParameter, dtmDateOfExpirationParameter, strVaccineDescParameter, strRabiesNumberParameter);
        }
    
        public virtual int uspAddVisit1(Nullable<int> intPetID, Nullable<int> intVisitReasonID, Nullable<System.DateTime> dtmDateOfVist)
        {
            var intPetIDParameter = intPetID.HasValue ?
                new ObjectParameter("intPetID", intPetID) :
                new ObjectParameter("intPetID", typeof(int));
    
            var intVisitReasonIDParameter = intVisitReasonID.HasValue ?
                new ObjectParameter("intVisitReasonID", intVisitReasonID) :
                new ObjectParameter("intVisitReasonID", typeof(int));
    
            var dtmDateOfVistParameter = dtmDateOfVist.HasValue ?
                new ObjectParameter("dtmDateOfVist", dtmDateOfVist) :
                new ObjectParameter("dtmDateOfVist", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisit1", intPetIDParameter, intVisitReasonIDParameter, dtmDateOfVistParameter);
        }
    
        public virtual int uspAddVisitEmployee1(Nullable<int> intVisitID, Nullable<int> intEmployeeID)
        {
            var intVisitIDParameter = intVisitID.HasValue ?
                new ObjectParameter("intVisitID", intVisitID) :
                new ObjectParameter("intVisitID", typeof(int));
    
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisitEmployee1", intVisitIDParameter, intEmployeeIDParameter);
        }
    
        public virtual int uspAddVisitMedication1(Nullable<int> intVisitID, Nullable<int> intMedicationID, Nullable<System.DateTime> dtmDatePrescribed, Nullable<int> intQuantity)
        {
            var intVisitIDParameter = intVisitID.HasValue ?
                new ObjectParameter("intVisitID", intVisitID) :
                new ObjectParameter("intVisitID", typeof(int));
    
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            var dtmDatePrescribedParameter = dtmDatePrescribed.HasValue ?
                new ObjectParameter("dtmDatePrescribed", dtmDatePrescribed) :
                new ObjectParameter("dtmDatePrescribed", typeof(System.DateTime));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisitMedication1", intVisitIDParameter, intMedicationIDParameter, dtmDatePrescribedParameter, intQuantityParameter);
        }
    
        public virtual int uspAddVisitService1(Nullable<int> intVisitID, Nullable<int> intServiceID)
        {
            var intVisitIDParameter = intVisitID.HasValue ?
                new ObjectParameter("intVisitID", intVisitID) :
                new ObjectParameter("intVisitID", typeof(int));
    
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddVisitService1", intVisitIDParameter, intServiceIDParameter);
        }
    
        public virtual int uspUpdateEmployee1(Nullable<int> intEmployeeID, string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateEmployee1", intEmployeeIDParameter, strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspUpdateMedication1(Nullable<int> intMedicationID, string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateMedication1", intMedicationIDParameter, strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspUpdateOwner1(Nullable<int> intOwnerID, string strFirstName, string strLastName, Nullable<int> intGenderID, string strAddress, string strCity, Nullable<int> intStateID, string strZip, string strPhoneNumber, string strEmail, string strOwner2Name, string strOwner2PhoneNumber, string strOwner2Email, string strNotes, Nullable<int> intUserID)
        {
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intStateIDParameter = intStateID.HasValue ?
                new ObjectParameter("intStateID", intStateID) :
                new ObjectParameter("intStateID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strPhoneNumberParameter = strPhoneNumber != null ?
                new ObjectParameter("strPhoneNumber", strPhoneNumber) :
                new ObjectParameter("strPhoneNumber", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strOwner2NameParameter = strOwner2Name != null ?
                new ObjectParameter("strOwner2Name", strOwner2Name) :
                new ObjectParameter("strOwner2Name", typeof(string));
    
            var strOwner2PhoneNumberParameter = strOwner2PhoneNumber != null ?
                new ObjectParameter("strOwner2PhoneNumber", strOwner2PhoneNumber) :
                new ObjectParameter("strOwner2PhoneNumber", typeof(string));
    
            var strOwner2EmailParameter = strOwner2Email != null ?
                new ObjectParameter("strOwner2Email", strOwner2Email) :
                new ObjectParameter("strOwner2Email", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateOwner1", intOwnerIDParameter, strFirstNameParameter, strLastNameParameter, intGenderIDParameter, strAddressParameter, strCityParameter, intStateIDParameter, strZipParameter, strPhoneNumberParameter, strEmailParameter, strOwner2NameParameter, strOwner2PhoneNumberParameter, strOwner2EmailParameter, strNotesParameter, intUserIDParameter);
        }
    
        public virtual int uspUpdateService1(Nullable<int> intServiceID, string strServiceDesc, Nullable<int> intServiceTypeID, Nullable<decimal> dblPrice)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            var strServiceDescParameter = strServiceDesc != null ?
                new ObjectParameter("strServiceDesc", strServiceDesc) :
                new ObjectParameter("strServiceDesc", typeof(string));
    
            var intServiceTypeIDParameter = intServiceTypeID.HasValue ?
                new ObjectParameter("intServiceTypeID", intServiceTypeID) :
                new ObjectParameter("intServiceTypeID", typeof(int));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdateService1", intServiceIDParameter, strServiceDescParameter, intServiceTypeIDParameter, dblPriceParameter);
        }
    
        public virtual int uspAddEarStatusInfo1(Nullable<bool> isNormal, Nullable<bool> isInflamed, Nullable<bool> isTumor, Nullable<bool> isDirty, Nullable<bool> isPainful, Nullable<bool> isExcessiveHair, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEarStatusInfo1", isNormalParameter, isInflamedParameter, isTumorParameter, isDirtyParameter, isPainfulParameter, isExcessiveHairParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEmployee1(string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEmployee1", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspAddEyeStatusInfo1(Nullable<bool> isNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isInflamed, Nullable<bool> isEyelidTumor, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEyeStatusInfo1", isNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isInflamedParameter, isEyelidTumorParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddGIInfo1(Nullable<bool> isNormal, Nullable<bool> isExcessiveGas, Nullable<bool> isParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddGIInfo1", isNormalParameter, isExcessiveGasParameter, isParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMedication1(string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMedication1", strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspAddMouthInfo1(Nullable<bool> isNormal, Nullable<bool> isTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMouthInfo1", isNormalParameter, isTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNeurologicalInfo1(Nullable<bool> isNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNeurologicalInfo1", isNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNewUser1(string strUserName, string strPassword, Nullable<int> intRoleID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intRoleIDParameter = intRoleID.HasValue ?
                new ObjectParameter("intRoleID", intRoleID) :
                new ObjectParameter("intRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNewUser1", strUserNameParameter, strPasswordParameter, intRoleIDParameter);
        }
    
        public virtual int uspAddPets1(string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPets1", strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddSkinInfo1(Nullable<bool> isNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isParasites, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddSkinInfo1", isNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isParasitesParameter, intHealthExamIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckEmployees1(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckEmployees1", intEmployeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckMedication1(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckMedication1", intMedicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckServices1(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckServices1", intServiceIDParameter);
        }
    
        public virtual int uspDeleteEmployee1(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteEmployee1", intEmployeeIDParameter);
        }
    
        public virtual int uspDeleteMedication1(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteMedication1", intMedicationIDParameter);
        }
    
        public virtual int uspDeleteService1(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteService1", intServiceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserOwnerID1(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserOwnerID1", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserRole1(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserRole1", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUserLogin1(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUserLogin1", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<uspViewEmployees1_Result> uspViewEmployees1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewEmployees1_Result>("uspViewEmployees1");
        }
    
        public virtual ObjectResult<uspViewMedications1_Result> uspViewMedications1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewMedications1_Result>("uspViewMedications1");
        }
    
        public virtual ObjectResult<uspViewOwnerPets_Result> uspViewOwnerPets(Nullable<long> ownerid)
        {
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwnerPets_Result>("uspViewOwnerPets", owneridParameter);
        }
    
        public virtual ObjectResult<uspViewOwners1_Result> uspViewOwners1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwners1_Result>("uspViewOwners1");
        }
    
        public virtual ObjectResult<uspViewPetGeneralInformation1_Result> uspViewPetGeneralInformation1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetGeneralInformation1_Result>("uspViewPetGeneralInformation1");
        }
    
        public virtual ObjectResult<uspViewPetMedications1_Result> uspViewPetMedications1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetMedications1_Result>("uspViewPetMedications1");
        }
    
        public virtual ObjectResult<uspViewPets1_Result> uspViewPets1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPets1_Result>("uspViewPets1");
        }
    
        public virtual ObjectResult<uspViewPetVaccinations1_Result> uspViewPetVaccinations1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVaccinations1_Result>("uspViewPetVaccinations1");
        }
    
        public virtual ObjectResult<uspViewPetVisits1_Result> uspViewPetVisits1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisits1_Result>("uspViewPetVisits1");
        }
    
        public virtual ObjectResult<uspViewServices1_Result> uspViewServices1()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewServices1_Result>("uspViewServices1");
        }
    
        public virtual int uspAddPetImages(ObjectParameter petImageID, Nullable<long> petid, string primary_img, byte[] img, string file_name, Nullable<long> image_size, Nullable<System.DateTime> date)
        {
            var petidParameter = petid.HasValue ?
                new ObjectParameter("petid", petid) :
                new ObjectParameter("petid", typeof(long));
    
            var primary_imgParameter = primary_img != null ?
                new ObjectParameter("primary_img", primary_img) :
                new ObjectParameter("primary_img", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(byte[]));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var image_sizeParameter = image_size.HasValue ?
                new ObjectParameter("image_size", image_size) :
                new ObjectParameter("image_size", typeof(long));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPetImages", petImageID, petidParameter, primary_imgParameter, imgParameter, file_nameParameter, image_sizeParameter, dateParameter);
        }
    
        public virtual int uspDeletePetImages(Nullable<long> petImageID)
        {
            var petImageIDParameter = petImageID.HasValue ?
                new ObjectParameter("petImageID", petImageID) :
                new ObjectParameter("petImageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeletePetImages", petImageIDParameter);
        }
    
        public virtual ObjectResult<uspSelectLatestPetImages_Result> uspSelectLatestPetImages(Nullable<long> petid)
        {
            var petidParameter = petid.HasValue ?
                new ObjectParameter("petid", petid) :
                new ObjectParameter("petid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSelectLatestPetImages_Result>("uspSelectLatestPetImages", petidParameter);
        }
    
        public virtual ObjectResult<uspSelectPetImages_Result> uspSelectPetImages(Nullable<long> petid)
        {
            var petidParameter = petid.HasValue ?
                new ObjectParameter("petid", petid) :
                new ObjectParameter("petid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSelectPetImages_Result>("uspSelectPetImages", petidParameter);
        }
    
        public virtual int uspUpdatePetImages(ObjectParameter petImageID, string primary_img, byte[] img, string file_name, Nullable<long> image_size)
        {
            var primary_imgParameter = primary_img != null ?
                new ObjectParameter("primary_img", primary_img) :
                new ObjectParameter("primary_img", typeof(string));
    
            var imgParameter = img != null ?
                new ObjectParameter("img", img) :
                new ObjectParameter("img", typeof(byte[]));
    
            var file_nameParameter = file_name != null ?
                new ObjectParameter("file_name", file_name) :
                new ObjectParameter("file_name", typeof(string));
    
            var image_sizeParameter = image_size.HasValue ?
                new ObjectParameter("image_size", image_size) :
                new ObjectParameter("image_size", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdatePetImages", petImageID, primary_imgParameter, imgParameter, file_nameParameter, image_sizeParameter);
        }
    
        public virtual int uspAddEarStatusInfo2(Nullable<bool> isNormal, Nullable<bool> isInflamed, Nullable<bool> isTumor, Nullable<bool> isDirty, Nullable<bool> isPainful, Nullable<bool> isExcessiveHair, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEarStatusInfo2", isNormalParameter, isInflamedParameter, isTumorParameter, isDirtyParameter, isPainfulParameter, isExcessiveHairParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEmployee2(string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEmployee2", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspAddEyeStatusInfo2(Nullable<bool> isNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isInflamed, Nullable<bool> isEyelidTumor, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEyeStatusInfo2", isNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isInflamedParameter, isEyelidTumorParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddGIInfo2(Nullable<bool> isNormal, Nullable<bool> isExcessiveGas, Nullable<bool> isParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddGIInfo2", isNormalParameter, isExcessiveGasParameter, isParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMedication2(string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMedication2", strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspAddMouthInfo2(Nullable<bool> isNormal, Nullable<bool> isTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMouthInfo2", isNormalParameter, isTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNeurologicalInfo2(Nullable<bool> isNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNeurologicalInfo2", isNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNewUser2(string strUserName, string strPassword, Nullable<int> intRoleID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intRoleIDParameter = intRoleID.HasValue ?
                new ObjectParameter("intRoleID", intRoleID) :
                new ObjectParameter("intRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNewUser2", strUserNameParameter, strPasswordParameter, intRoleIDParameter);
        }
    
        public virtual int uspAddPets2(string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPets2", strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddSkinInfo2(Nullable<bool> isNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isParasites, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddSkinInfo2", isNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isParasitesParameter, intHealthExamIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckEmployees2(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckEmployees2", intEmployeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckMedication2(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckMedication2", intMedicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckServices2(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckServices2", intServiceIDParameter);
        }
    
        public virtual int uspDeleteEmployee2(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteEmployee2", intEmployeeIDParameter);
        }
    
        public virtual int uspDeleteMedication2(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteMedication2", intMedicationIDParameter);
        }
    
        public virtual int uspDeleteService2(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteService2", intServiceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserOwnerID2(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserOwnerID2", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserRole2(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserRole2", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUserLogin2(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUserLogin2", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<uspViewEmployees2_Result> uspViewEmployees2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewEmployees2_Result>("uspViewEmployees2");
        }
    
        public virtual ObjectResult<uspViewMedications2_Result> uspViewMedications2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewMedications2_Result>("uspViewMedications2");
        }
    
        public virtual ObjectResult<uspViewOwnerPets1_Result> uspViewOwnerPets1(Nullable<long> ownerid)
        {
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwnerPets1_Result>("uspViewOwnerPets1", owneridParameter);
        }
    
        public virtual ObjectResult<uspViewOwners2_Result> uspViewOwners2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwners2_Result>("uspViewOwners2");
        }
    
        public virtual ObjectResult<uspViewPetGeneralInformation2_Result> uspViewPetGeneralInformation2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetGeneralInformation2_Result>("uspViewPetGeneralInformation2");
        }
    
        public virtual ObjectResult<uspViewPetMedications2_Result> uspViewPetMedications2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetMedications2_Result>("uspViewPetMedications2");
        }
    
        public virtual ObjectResult<uspViewPets2_Result> uspViewPets2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPets2_Result>("uspViewPets2");
        }
    
        public virtual ObjectResult<uspViewPetVaccinations2_Result> uspViewPetVaccinations2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVaccinations2_Result>("uspViewPetVaccinations2");
        }
    
        public virtual ObjectResult<uspViewPetVisits2_Result> uspViewPetVisits2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisits2_Result>("uspViewPetVisits2");
        }
    
        public virtual ObjectResult<uspViewPetVisitsByPet_Result> uspViewPetVisitsByPet(Nullable<long> petID)
        {
            var petIDParameter = petID.HasValue ?
                new ObjectParameter("petID", petID) :
                new ObjectParameter("petID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisitsByPet_Result>("uspViewPetVisitsByPet", petIDParameter);
        }
    
        public virtual ObjectResult<uspViewServices2_Result> uspViewServices2()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewServices2_Result>("uspViewServices2");
        }
    
        public virtual int uspAddPetImages1(ObjectParameter intPetImageID, string strFileName, string strContentType, byte[] imgContent, string strFileType, Nullable<int> intPetID)
        {
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var strContentTypeParameter = strContentType != null ?
                new ObjectParameter("strContentType", strContentType) :
                new ObjectParameter("strContentType", typeof(string));
    
            var imgContentParameter = imgContent != null ?
                new ObjectParameter("imgContent", imgContent) :
                new ObjectParameter("imgContent", typeof(byte[]));
    
            var strFileTypeParameter = strFileType != null ?
                new ObjectParameter("strFileType", strFileType) :
                new ObjectParameter("strFileType", typeof(string));
    
            var intPetIDParameter = intPetID.HasValue ?
                new ObjectParameter("intPetID", intPetID) :
                new ObjectParameter("intPetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPetImages1", intPetImageID, strFileNameParameter, strContentTypeParameter, imgContentParameter, strFileTypeParameter, intPetIDParameter);
        }
    
        public virtual ObjectResult<uspSelectPetImages1_Result> uspSelectPetImages1(Nullable<long> petid)
        {
            var petidParameter = petid.HasValue ?
                new ObjectParameter("petid", petid) :
                new ObjectParameter("petid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSelectPetImages1_Result>("uspSelectPetImages1", petidParameter);
        }
    
        public virtual int uspUpdatePetImages1(Nullable<int> intPetImageID, string strFileName, string strContentType, byte[] imgContent, string strFileType, Nullable<int> intPetID)
        {
            var intPetImageIDParameter = intPetImageID.HasValue ?
                new ObjectParameter("intPetImageID", intPetImageID) :
                new ObjectParameter("intPetImageID", typeof(int));
    
            var strFileNameParameter = strFileName != null ?
                new ObjectParameter("strFileName", strFileName) :
                new ObjectParameter("strFileName", typeof(string));
    
            var strContentTypeParameter = strContentType != null ?
                new ObjectParameter("strContentType", strContentType) :
                new ObjectParameter("strContentType", typeof(string));
    
            var imgContentParameter = imgContent != null ?
                new ObjectParameter("imgContent", imgContent) :
                new ObjectParameter("imgContent", typeof(byte[]));
    
            var strFileTypeParameter = strFileType != null ?
                new ObjectParameter("strFileType", strFileType) :
                new ObjectParameter("strFileType", typeof(string));
    
            var intPetIDParameter = intPetID.HasValue ?
                new ObjectParameter("intPetID", intPetID) :
                new ObjectParameter("intPetID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdatePetImages1", intPetImageIDParameter, strFileNameParameter, strContentTypeParameter, imgContentParameter, strFileTypeParameter, intPetIDParameter);
        }
    
        public virtual int uspUpdatePets(Nullable<int> intPetID, string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var intPetIDParameter = intPetID.HasValue ?
                new ObjectParameter("intPetID", intPetID) :
                new ObjectParameter("intPetID", typeof(int));
    
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspUpdatePets", intPetIDParameter, strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddUserEmployee(string strFirstName, string strLastName, Nullable<int> intJobTitleID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUserEmployee", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter);
        }
    
        public virtual int uspAddUserOwner(ObjectParameter strUserName, ObjectParameter strPassword, string strFirstName, string strLastName, Nullable<int> intGenderID, string strAddress, string strCity, Nullable<int> intStateID, string strZip, string strPhoneNumber, string strEmail, string strOwner2Name, string strOwner2PhoneNumber, string strOwner2Email, string strNotes)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var strAddressParameter = strAddress != null ?
                new ObjectParameter("strAddress", strAddress) :
                new ObjectParameter("strAddress", typeof(string));
    
            var strCityParameter = strCity != null ?
                new ObjectParameter("strCity", strCity) :
                new ObjectParameter("strCity", typeof(string));
    
            var intStateIDParameter = intStateID.HasValue ?
                new ObjectParameter("intStateID", intStateID) :
                new ObjectParameter("intStateID", typeof(int));
    
            var strZipParameter = strZip != null ?
                new ObjectParameter("strZip", strZip) :
                new ObjectParameter("strZip", typeof(string));
    
            var strPhoneNumberParameter = strPhoneNumber != null ?
                new ObjectParameter("strPhoneNumber", strPhoneNumber) :
                new ObjectParameter("strPhoneNumber", typeof(string));
    
            var strEmailParameter = strEmail != null ?
                new ObjectParameter("strEmail", strEmail) :
                new ObjectParameter("strEmail", typeof(string));
    
            var strOwner2NameParameter = strOwner2Name != null ?
                new ObjectParameter("strOwner2Name", strOwner2Name) :
                new ObjectParameter("strOwner2Name", typeof(string));
    
            var strOwner2PhoneNumberParameter = strOwner2PhoneNumber != null ?
                new ObjectParameter("strOwner2PhoneNumber", strOwner2PhoneNumber) :
                new ObjectParameter("strOwner2PhoneNumber", typeof(string));
    
            var strOwner2EmailParameter = strOwner2Email != null ?
                new ObjectParameter("strOwner2Email", strOwner2Email) :
                new ObjectParameter("strOwner2Email", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddUserOwner", strUserName, strPassword, strFirstNameParameter, strLastNameParameter, intGenderIDParameter, strAddressParameter, strCityParameter, intStateIDParameter, strZipParameter, strPhoneNumberParameter, strEmailParameter, strOwner2NameParameter, strOwner2PhoneNumberParameter, strOwner2EmailParameter, strNotesParameter);
        }
    
        public virtual int uspDeletePetImages1(Nullable<long> petImageID)
        {
            var petImageIDParameter = petImageID.HasValue ?
                new ObjectParameter("petImageID", petImageID) :
                new ObjectParameter("petImageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeletePetImages1", petImageIDParameter);
        }
    
        public virtual ObjectResult<uspSelectLatestPetImages1_Result> uspSelectLatestPetImages1(Nullable<long> petid)
        {
            var petidParameter = petid.HasValue ?
                new ObjectParameter("petid", petid) :
                new ObjectParameter("petid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspSelectLatestPetImages1_Result>("uspSelectLatestPetImages1", petidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser(Nullable<long> uid)
        {
            var uidParameter = uid.HasValue ?
                new ObjectParameter("uid", uid) :
                new ObjectParameter("uid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser", uidParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID1(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID1", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID2(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID2", unParameter, pwParameter);
        }
    
        public virtual int Validate_User(string strUsername, string strPassword)
        {
            var strUsernameParameter = strUsername != null ?
                new ObjectParameter("strUsername", strUsername) :
                new ObjectParameter("strUsername", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Validate_User", strUsernameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID3(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID3", unParameter, pwParameter);
        }
    
        public virtual int Validate_User1(string strUsername, string strPassword)
        {
            var strUsernameParameter = strUsername != null ?
                new ObjectParameter("strUsername", strUsername) :
                new ObjectParameter("strUsername", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Validate_User1", strUsernameParameter, strPasswordParameter);
        }
    
        public virtual int Validate_User2(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Validate_User2", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID4(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID4", unParameter, pwParameter);
        }
    
        public virtual int Validate_User3(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Validate_User3", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Validate_User4(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validate_User4", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Validate_User5(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validate_User5", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser1(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser1", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser2(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser2", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerID(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerID", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID5(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID5", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Validate_User6(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validate_User6", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetRole(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetRole", intUserIDParameter);
        }
    
        public virtual int uspAddEarStatusInfo3(Nullable<bool> isNormal, Nullable<bool> isInflamed, Nullable<bool> isTumor, Nullable<bool> isDirty, Nullable<bool> isPainful, Nullable<bool> isExcessiveHair, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEarStatusInfo3", isNormalParameter, isInflamedParameter, isTumorParameter, isDirtyParameter, isPainfulParameter, isExcessiveHairParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEmployee3(string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEmployee3", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspAddEyeStatusInfo3(Nullable<bool> isNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isInflamed, Nullable<bool> isEyelidTumor, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEyeStatusInfo3", isNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isInflamedParameter, isEyelidTumorParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddGIInfo3(Nullable<bool> isNormal, Nullable<bool> isExcessiveGas, Nullable<bool> isParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddGIInfo3", isNormalParameter, isExcessiveGasParameter, isParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMedication3(string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMedication3", strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspAddMouthInfo3(Nullable<bool> isNormal, Nullable<bool> isTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMouthInfo3", isNormalParameter, isTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNeurologicalInfo3(Nullable<bool> isNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNeurologicalInfo3", isNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNewUser3(string strUserName, string strPassword, Nullable<int> intRoleID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intRoleIDParameter = intRoleID.HasValue ?
                new ObjectParameter("intRoleID", intRoleID) :
                new ObjectParameter("intRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNewUser3", strUserNameParameter, strPasswordParameter, intRoleIDParameter);
        }
    
        public virtual int uspAddPets3(string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPets3", strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddSkinInfo3(Nullable<bool> isNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isParasites, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddSkinInfo3", isNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isParasitesParameter, intHealthExamIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckEmployees3(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckEmployees3", intEmployeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckMedication3(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckMedication3", intMedicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckServices3(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckServices3", intServiceIDParameter);
        }
    
        public virtual int uspDeleteEmployee3(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteEmployee3", intEmployeeIDParameter);
        }
    
        public virtual int uspDeleteMedication3(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteMedication3", intMedicationIDParameter);
        }
    
        public virtual int uspDeleteService3(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteService3", intServiceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser3(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser3", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID6(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID6", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserOwnerID3(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserOwnerID3", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserRole3(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserRole3", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUserLogin3(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUserLogin3", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<uspViewEmployees3_Result> uspViewEmployees3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewEmployees3_Result>("uspViewEmployees3");
        }
    
        public virtual ObjectResult<uspViewMedications3_Result> uspViewMedications3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewMedications3_Result>("uspViewMedications3");
        }
    
        public virtual ObjectResult<uspViewOwnerPets2_Result> uspViewOwnerPets2(Nullable<long> ownerid)
        {
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwnerPets2_Result>("uspViewOwnerPets2", owneridParameter);
        }
    
        public virtual ObjectResult<uspViewOwners3_Result> uspViewOwners3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwners3_Result>("uspViewOwners3");
        }
    
        public virtual ObjectResult<uspViewPetGeneralInformation3_Result> uspViewPetGeneralInformation3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetGeneralInformation3_Result>("uspViewPetGeneralInformation3");
        }
    
        public virtual ObjectResult<uspViewPetMedications3_Result> uspViewPetMedications3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetMedications3_Result>("uspViewPetMedications3");
        }
    
        public virtual ObjectResult<uspViewPets3_Result> uspViewPets3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPets3_Result>("uspViewPets3");
        }
    
        public virtual ObjectResult<uspViewPetVaccinations3_Result> uspViewPetVaccinations3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVaccinations3_Result>("uspViewPetVaccinations3");
        }
    
        public virtual ObjectResult<uspViewPetVisits3_Result> uspViewPetVisits3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisits3_Result>("uspViewPetVisits3");
        }
    
        public virtual ObjectResult<uspViewServices3_Result> uspViewServices3()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewServices3_Result>("uspViewServices3");
        }
    
        public virtual int uspAddEarStatusInfo4(Nullable<bool> isNormal, Nullable<bool> isInflamed, Nullable<bool> isTumor, Nullable<bool> isDirty, Nullable<bool> isPainful, Nullable<bool> isExcessiveHair, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEarStatusInfo4", isNormalParameter, isInflamedParameter, isTumorParameter, isDirtyParameter, isPainfulParameter, isExcessiveHairParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEmployee4(string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEmployee4", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspAddEyeStatusInfo4(Nullable<bool> isNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isInflamed, Nullable<bool> isEyelidTumor, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEyeStatusInfo4", isNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isInflamedParameter, isEyelidTumorParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddGIInfo4(Nullable<bool> isNormal, Nullable<bool> isExcessiveGas, Nullable<bool> isParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddGIInfo4", isNormalParameter, isExcessiveGasParameter, isParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMedication4(string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMedication4", strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspAddMouthInfo4(Nullable<bool> isNormal, Nullable<bool> isTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMouthInfo4", isNormalParameter, isTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNeurologicalInfo4(Nullable<bool> isNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNeurologicalInfo4", isNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNewUser4(string strUserName, string strPassword, Nullable<int> intRoleID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intRoleIDParameter = intRoleID.HasValue ?
                new ObjectParameter("intRoleID", intRoleID) :
                new ObjectParameter("intRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNewUser4", strUserNameParameter, strPasswordParameter, intRoleIDParameter);
        }
    
        public virtual int uspAddPets4(string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPets4", strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddSkinInfo4(Nullable<bool> isNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isParasites, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddSkinInfo4", isNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isParasitesParameter, intHealthExamIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckEmployees4(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckEmployees4", intEmployeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckMedication4(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckMedication4", intMedicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckServices4(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckServices4", intServiceIDParameter);
        }
    
        public virtual int uspDeleteEmployee4(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteEmployee4", intEmployeeIDParameter);
        }
    
        public virtual int uspDeleteMedication4(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteMedication4", intMedicationIDParameter);
        }
    
        public virtual int uspDeleteService4(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteService4", intServiceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerID1(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerID1", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser4(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser4", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetRole1(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetRole1", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID7(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID7", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserOwnerID4(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserOwnerID4", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserRole4(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserRole4", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUserLogin4(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUserLogin4", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<uspViewEmployees4_Result> uspViewEmployees4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewEmployees4_Result>("uspViewEmployees4");
        }
    
        public virtual ObjectResult<uspViewMedications4_Result> uspViewMedications4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewMedications4_Result>("uspViewMedications4");
        }
    
        public virtual ObjectResult<uspViewOwnerPets3_Result> uspViewOwnerPets3(Nullable<long> ownerid)
        {
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwnerPets3_Result>("uspViewOwnerPets3", owneridParameter);
        }
    
        public virtual ObjectResult<uspViewOwners4_Result> uspViewOwners4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwners4_Result>("uspViewOwners4");
        }
    
        public virtual ObjectResult<uspViewPetGeneralInformation4_Result> uspViewPetGeneralInformation4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetGeneralInformation4_Result>("uspViewPetGeneralInformation4");
        }
    
        public virtual ObjectResult<uspViewPetMedications4_Result> uspViewPetMedications4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetMedications4_Result>("uspViewPetMedications4");
        }
    
        public virtual ObjectResult<uspViewPets4_Result> uspViewPets4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPets4_Result>("uspViewPets4");
        }
    
        public virtual ObjectResult<uspViewPetVaccinations4_Result> uspViewPetVaccinations4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVaccinations4_Result>("uspViewPetVaccinations4");
        }
    
        public virtual ObjectResult<uspViewPetVisits4_Result> uspViewPetVisits4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisits4_Result>("uspViewPetVisits4");
        }
    
        public virtual ObjectResult<uspViewServices4_Result> uspViewServices4()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewServices4_Result>("uspViewServices4");
        }
    
        public virtual ObjectResult<Nullable<int>> Validate_User7(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validate_User7", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser5(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser5", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetRole2(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetRole2", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID8(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID8", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Validate_User8(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validate_User8", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerID2(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerID2", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerID3(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerID3", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetOwnerIDFromUser6(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetOwnerIDFromUser6", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetRole3(Nullable<int> intUserID)
        {
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetRole3", intUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserID9(string un, string pw)
        {
            var unParameter = un != null ?
                new ObjectParameter("un", un) :
                new ObjectParameter("un", typeof(string));
    
            var pwParameter = pw != null ?
                new ObjectParameter("pw", pw) :
                new ObjectParameter("pw", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserID9", unParameter, pwParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Validate_User9(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Validate_User9", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual int uspAddEarStatusInfo5(Nullable<bool> isNormal, Nullable<bool> isInflamed, Nullable<bool> isTumor, Nullable<bool> isDirty, Nullable<bool> isPainful, Nullable<bool> isExcessiveHair, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isDirtyParameter = isDirty.HasValue ?
                new ObjectParameter("isDirty", isDirty) :
                new ObjectParameter("isDirty", typeof(bool));
    
            var isPainfulParameter = isPainful.HasValue ?
                new ObjectParameter("isPainful", isPainful) :
                new ObjectParameter("isPainful", typeof(bool));
    
            var isExcessiveHairParameter = isExcessiveHair.HasValue ?
                new ObjectParameter("isExcessiveHair", isExcessiveHair) :
                new ObjectParameter("isExcessiveHair", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEarStatusInfo5", isNormalParameter, isInflamedParameter, isTumorParameter, isDirtyParameter, isPainfulParameter, isExcessiveHairParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddEmployee5(string strFirstName, string strLastName, Nullable<int> intJobTitleID, Nullable<int> intUserID)
        {
            var strFirstNameParameter = strFirstName != null ?
                new ObjectParameter("strFirstName", strFirstName) :
                new ObjectParameter("strFirstName", typeof(string));
    
            var strLastNameParameter = strLastName != null ?
                new ObjectParameter("strLastName", strLastName) :
                new ObjectParameter("strLastName", typeof(string));
    
            var intJobTitleIDParameter = intJobTitleID.HasValue ?
                new ObjectParameter("intJobTitleID", intJobTitleID) :
                new ObjectParameter("intJobTitleID", typeof(int));
    
            var intUserIDParameter = intUserID.HasValue ?
                new ObjectParameter("intUserID", intUserID) :
                new ObjectParameter("intUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEmployee5", strFirstNameParameter, strLastNameParameter, intJobTitleIDParameter, intUserIDParameter);
        }
    
        public virtual int uspAddEyeStatusInfo5(Nullable<bool> isNormal, Nullable<bool> isDischarge, Nullable<bool> isInfection, Nullable<bool> isSclerosisLeft, Nullable<bool> isSclerosisRight, Nullable<bool> isCataractLeft, Nullable<bool> isCataractRight, Nullable<bool> isInflamed, Nullable<bool> isEyelidTumor, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isDischargeParameter = isDischarge.HasValue ?
                new ObjectParameter("isDischarge", isDischarge) :
                new ObjectParameter("isDischarge", typeof(bool));
    
            var isInfectionParameter = isInfection.HasValue ?
                new ObjectParameter("isInfection", isInfection) :
                new ObjectParameter("isInfection", typeof(bool));
    
            var isSclerosisLeftParameter = isSclerosisLeft.HasValue ?
                new ObjectParameter("isSclerosisLeft", isSclerosisLeft) :
                new ObjectParameter("isSclerosisLeft", typeof(bool));
    
            var isSclerosisRightParameter = isSclerosisRight.HasValue ?
                new ObjectParameter("isSclerosisRight", isSclerosisRight) :
                new ObjectParameter("isSclerosisRight", typeof(bool));
    
            var isCataractLeftParameter = isCataractLeft.HasValue ?
                new ObjectParameter("isCataractLeft", isCataractLeft) :
                new ObjectParameter("isCataractLeft", typeof(bool));
    
            var isCataractRightParameter = isCataractRight.HasValue ?
                new ObjectParameter("isCataractRight", isCataractRight) :
                new ObjectParameter("isCataractRight", typeof(bool));
    
            var isInflamedParameter = isInflamed.HasValue ?
                new ObjectParameter("isInflamed", isInflamed) :
                new ObjectParameter("isInflamed", typeof(bool));
    
            var isEyelidTumorParameter = isEyelidTumor.HasValue ?
                new ObjectParameter("isEyelidTumor", isEyelidTumor) :
                new ObjectParameter("isEyelidTumor", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddEyeStatusInfo5", isNormalParameter, isDischargeParameter, isInfectionParameter, isSclerosisLeftParameter, isSclerosisRightParameter, isCataractLeftParameter, isCataractRightParameter, isInflamedParameter, isEyelidTumorParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddGIInfo5(Nullable<bool> isNormal, Nullable<bool> isExcessiveGas, Nullable<bool> isParasites, Nullable<bool> isAbnormalFeces, Nullable<bool> isAnorexia, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isExcessiveGasParameter = isExcessiveGas.HasValue ?
                new ObjectParameter("isExcessiveGas", isExcessiveGas) :
                new ObjectParameter("isExcessiveGas", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var isAbnormalFecesParameter = isAbnormalFeces.HasValue ?
                new ObjectParameter("isAbnormalFeces", isAbnormalFeces) :
                new ObjectParameter("isAbnormalFeces", typeof(bool));
    
            var isAnorexiaParameter = isAnorexia.HasValue ?
                new ObjectParameter("isAnorexia", isAnorexia) :
                new ObjectParameter("isAnorexia", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddGIInfo5", isNormalParameter, isExcessiveGasParameter, isParasitesParameter, isAbnormalFecesParameter, isAnorexiaParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddMedication5(string strMedicationName, string strMedicationDesc, Nullable<decimal> dblCost, Nullable<decimal> dblPrice, string strNotes, Nullable<int> intQuantity, Nullable<int> intMethodID)
        {
            var strMedicationNameParameter = strMedicationName != null ?
                new ObjectParameter("strMedicationName", strMedicationName) :
                new ObjectParameter("strMedicationName", typeof(string));
    
            var strMedicationDescParameter = strMedicationDesc != null ?
                new ObjectParameter("strMedicationDesc", strMedicationDesc) :
                new ObjectParameter("strMedicationDesc", typeof(string));
    
            var dblCostParameter = dblCost.HasValue ?
                new ObjectParameter("dblCost", dblCost) :
                new ObjectParameter("dblCost", typeof(decimal));
    
            var dblPriceParameter = dblPrice.HasValue ?
                new ObjectParameter("dblPrice", dblPrice) :
                new ObjectParameter("dblPrice", typeof(decimal));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intQuantityParameter = intQuantity.HasValue ?
                new ObjectParameter("intQuantity", intQuantity) :
                new ObjectParameter("intQuantity", typeof(int));
    
            var intMethodIDParameter = intMethodID.HasValue ?
                new ObjectParameter("intMethodID", intMethodID) :
                new ObjectParameter("intMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMedication5", strMedicationNameParameter, strMedicationDescParameter, dblCostParameter, dblPriceParameter, strNotesParameter, intQuantityParameter, intMethodIDParameter);
        }
    
        public virtual int uspAddMouthInfo5(Nullable<bool> isNormal, Nullable<bool> isTumor, Nullable<bool> isGingivitis, Nullable<bool> isPeriodontitis, Nullable<bool> isTartarBuildup, Nullable<bool> isLooseTeeth, Nullable<bool> isBiteOVerUnder, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isTumorParameter = isTumor.HasValue ?
                new ObjectParameter("isTumor", isTumor) :
                new ObjectParameter("isTumor", typeof(bool));
    
            var isGingivitisParameter = isGingivitis.HasValue ?
                new ObjectParameter("isGingivitis", isGingivitis) :
                new ObjectParameter("isGingivitis", typeof(bool));
    
            var isPeriodontitisParameter = isPeriodontitis.HasValue ?
                new ObjectParameter("isPeriodontitis", isPeriodontitis) :
                new ObjectParameter("isPeriodontitis", typeof(bool));
    
            var isTartarBuildupParameter = isTartarBuildup.HasValue ?
                new ObjectParameter("isTartarBuildup", isTartarBuildup) :
                new ObjectParameter("isTartarBuildup", typeof(bool));
    
            var isLooseTeethParameter = isLooseTeeth.HasValue ?
                new ObjectParameter("isLooseTeeth", isLooseTeeth) :
                new ObjectParameter("isLooseTeeth", typeof(bool));
    
            var isBiteOVerUnderParameter = isBiteOVerUnder.HasValue ?
                new ObjectParameter("isBiteOVerUnder", isBiteOVerUnder) :
                new ObjectParameter("isBiteOVerUnder", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddMouthInfo5", isNormalParameter, isTumorParameter, isGingivitisParameter, isPeriodontitisParameter, isTartarBuildupParameter, isLooseTeethParameter, isBiteOVerUnderParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNeurologicalInfo5(Nullable<bool> isNormal, Nullable<bool> isPLRL, Nullable<bool> isPLRR, Nullable<bool> isCPLF, Nullable<bool> isCPRF, Nullable<bool> isCPLR, Nullable<bool> isCPRR, Nullable<bool> isPalpebralL, Nullable<bool> isPalpebralR, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isPLRLParameter = isPLRL.HasValue ?
                new ObjectParameter("isPLRL", isPLRL) :
                new ObjectParameter("isPLRL", typeof(bool));
    
            var isPLRRParameter = isPLRR.HasValue ?
                new ObjectParameter("isPLRR", isPLRR) :
                new ObjectParameter("isPLRR", typeof(bool));
    
            var isCPLFParameter = isCPLF.HasValue ?
                new ObjectParameter("isCPLF", isCPLF) :
                new ObjectParameter("isCPLF", typeof(bool));
    
            var isCPRFParameter = isCPRF.HasValue ?
                new ObjectParameter("isCPRF", isCPRF) :
                new ObjectParameter("isCPRF", typeof(bool));
    
            var isCPLRParameter = isCPLR.HasValue ?
                new ObjectParameter("isCPLR", isCPLR) :
                new ObjectParameter("isCPLR", typeof(bool));
    
            var isCPRRParameter = isCPRR.HasValue ?
                new ObjectParameter("isCPRR", isCPRR) :
                new ObjectParameter("isCPRR", typeof(bool));
    
            var isPalpebralLParameter = isPalpebralL.HasValue ?
                new ObjectParameter("isPalpebralL", isPalpebralL) :
                new ObjectParameter("isPalpebralL", typeof(bool));
    
            var isPalpebralRParameter = isPalpebralR.HasValue ?
                new ObjectParameter("isPalpebralR", isPalpebralR) :
                new ObjectParameter("isPalpebralR", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNeurologicalInfo5", isNormalParameter, isPLRLParameter, isPLRRParameter, isCPLFParameter, isCPRFParameter, isCPLRParameter, isCPRRParameter, isPalpebralLParameter, isPalpebralRParameter, intHealthExamIDParameter);
        }
    
        public virtual int uspAddNewUser5(string strUserName, string strPassword, Nullable<int> intRoleID)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            var intRoleIDParameter = intRoleID.HasValue ?
                new ObjectParameter("intRoleID", intRoleID) :
                new ObjectParameter("intRoleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddNewUser5", strUserNameParameter, strPasswordParameter, intRoleIDParameter);
        }
    
        public virtual int uspAddPets5(string strPetNumber, string strMicrochipID, string strPetName, Nullable<int> intPetTypeID, Nullable<int> intGenderID, Nullable<int> intBreedID, Nullable<System.DateTime> dtmDateofBirth, Nullable<double> dblWeight, Nullable<bool> isBlind, Nullable<bool> isDeaf, Nullable<bool> isAggressive, Nullable<bool> isDeceased, Nullable<bool> isAllergic, string strColor, string strNotes, Nullable<int> intOwnerID)
        {
            var strPetNumberParameter = strPetNumber != null ?
                new ObjectParameter("strPetNumber", strPetNumber) :
                new ObjectParameter("strPetNumber", typeof(string));
    
            var strMicrochipIDParameter = strMicrochipID != null ?
                new ObjectParameter("strMicrochipID", strMicrochipID) :
                new ObjectParameter("strMicrochipID", typeof(string));
    
            var strPetNameParameter = strPetName != null ?
                new ObjectParameter("strPetName", strPetName) :
                new ObjectParameter("strPetName", typeof(string));
    
            var intPetTypeIDParameter = intPetTypeID.HasValue ?
                new ObjectParameter("intPetTypeID", intPetTypeID) :
                new ObjectParameter("intPetTypeID", typeof(int));
    
            var intGenderIDParameter = intGenderID.HasValue ?
                new ObjectParameter("intGenderID", intGenderID) :
                new ObjectParameter("intGenderID", typeof(int));
    
            var intBreedIDParameter = intBreedID.HasValue ?
                new ObjectParameter("intBreedID", intBreedID) :
                new ObjectParameter("intBreedID", typeof(int));
    
            var dtmDateofBirthParameter = dtmDateofBirth.HasValue ?
                new ObjectParameter("dtmDateofBirth", dtmDateofBirth) :
                new ObjectParameter("dtmDateofBirth", typeof(System.DateTime));
    
            var dblWeightParameter = dblWeight.HasValue ?
                new ObjectParameter("dblWeight", dblWeight) :
                new ObjectParameter("dblWeight", typeof(double));
    
            var isBlindParameter = isBlind.HasValue ?
                new ObjectParameter("isBlind", isBlind) :
                new ObjectParameter("isBlind", typeof(bool));
    
            var isDeafParameter = isDeaf.HasValue ?
                new ObjectParameter("isDeaf", isDeaf) :
                new ObjectParameter("isDeaf", typeof(bool));
    
            var isAggressiveParameter = isAggressive.HasValue ?
                new ObjectParameter("isAggressive", isAggressive) :
                new ObjectParameter("isAggressive", typeof(bool));
    
            var isDeceasedParameter = isDeceased.HasValue ?
                new ObjectParameter("isDeceased", isDeceased) :
                new ObjectParameter("isDeceased", typeof(bool));
    
            var isAllergicParameter = isAllergic.HasValue ?
                new ObjectParameter("isAllergic", isAllergic) :
                new ObjectParameter("isAllergic", typeof(bool));
    
            var strColorParameter = strColor != null ?
                new ObjectParameter("strColor", strColor) :
                new ObjectParameter("strColor", typeof(string));
    
            var strNotesParameter = strNotes != null ?
                new ObjectParameter("strNotes", strNotes) :
                new ObjectParameter("strNotes", typeof(string));
    
            var intOwnerIDParameter = intOwnerID.HasValue ?
                new ObjectParameter("intOwnerID", intOwnerID) :
                new ObjectParameter("intOwnerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddPets5", strPetNumberParameter, strMicrochipIDParameter, strPetNameParameter, intPetTypeIDParameter, intGenderIDParameter, intBreedIDParameter, dtmDateofBirthParameter, dblWeightParameter, isBlindParameter, isDeafParameter, isAggressiveParameter, isDeceasedParameter, isAllergicParameter, strColorParameter, strNotesParameter, intOwnerIDParameter);
        }
    
        public virtual int uspAddSkinInfo5(Nullable<bool> isNormal, Nullable<bool> isScaly, Nullable<bool> isInfected, Nullable<bool> isMatted, Nullable<bool> isSkinScrape, Nullable<bool> isPruritus, Nullable<bool> isHairLoss, Nullable<bool> isMass, Nullable<bool> isParasites, Nullable<int> intHealthExamID)
        {
            var isNormalParameter = isNormal.HasValue ?
                new ObjectParameter("isNormal", isNormal) :
                new ObjectParameter("isNormal", typeof(bool));
    
            var isScalyParameter = isScaly.HasValue ?
                new ObjectParameter("isScaly", isScaly) :
                new ObjectParameter("isScaly", typeof(bool));
    
            var isInfectedParameter = isInfected.HasValue ?
                new ObjectParameter("isInfected", isInfected) :
                new ObjectParameter("isInfected", typeof(bool));
    
            var isMattedParameter = isMatted.HasValue ?
                new ObjectParameter("isMatted", isMatted) :
                new ObjectParameter("isMatted", typeof(bool));
    
            var isSkinScrapeParameter = isSkinScrape.HasValue ?
                new ObjectParameter("isSkinScrape", isSkinScrape) :
                new ObjectParameter("isSkinScrape", typeof(bool));
    
            var isPruritusParameter = isPruritus.HasValue ?
                new ObjectParameter("isPruritus", isPruritus) :
                new ObjectParameter("isPruritus", typeof(bool));
    
            var isHairLossParameter = isHairLoss.HasValue ?
                new ObjectParameter("isHairLoss", isHairLoss) :
                new ObjectParameter("isHairLoss", typeof(bool));
    
            var isMassParameter = isMass.HasValue ?
                new ObjectParameter("isMass", isMass) :
                new ObjectParameter("isMass", typeof(bool));
    
            var isParasitesParameter = isParasites.HasValue ?
                new ObjectParameter("isParasites", isParasites) :
                new ObjectParameter("isParasites", typeof(bool));
    
            var intHealthExamIDParameter = intHealthExamID.HasValue ?
                new ObjectParameter("intHealthExamID", intHealthExamID) :
                new ObjectParameter("intHealthExamID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspAddSkinInfo5", isNormalParameter, isScalyParameter, isInfectedParameter, isMattedParameter, isSkinScrapeParameter, isPruritusParameter, isHairLossParameter, isMassParameter, isParasitesParameter, intHealthExamIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckEmployees5(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckEmployees5", intEmployeeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckMedication5(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckMedication5", intMedicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspCheckServices5(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspCheckServices5", intServiceIDParameter);
        }
    
        public virtual int uspDeleteEmployee5(Nullable<int> intEmployeeID)
        {
            var intEmployeeIDParameter = intEmployeeID.HasValue ?
                new ObjectParameter("intEmployeeID", intEmployeeID) :
                new ObjectParameter("intEmployeeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteEmployee5", intEmployeeIDParameter);
        }
    
        public virtual int uspDeleteMedication5(Nullable<int> intMedicationID)
        {
            var intMedicationIDParameter = intMedicationID.HasValue ?
                new ObjectParameter("intMedicationID", intMedicationID) :
                new ObjectParameter("intMedicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteMedication5", intMedicationIDParameter);
        }
    
        public virtual int uspDeleteService5(Nullable<int> intServiceID)
        {
            var intServiceIDParameter = intServiceID.HasValue ?
                new ObjectParameter("intServiceID", intServiceID) :
                new ObjectParameter("intServiceID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("uspDeleteService5", intServiceIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserOwnerID5(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserOwnerID5", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspGetUserRole5(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspGetUserRole5", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> uspUserLogin5(string strUserName, string strPassword)
        {
            var strUserNameParameter = strUserName != null ?
                new ObjectParameter("strUserName", strUserName) :
                new ObjectParameter("strUserName", typeof(string));
    
            var strPasswordParameter = strPassword != null ?
                new ObjectParameter("strPassword", strPassword) :
                new ObjectParameter("strPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("uspUserLogin5", strUserNameParameter, strPasswordParameter);
        }
    
        public virtual ObjectResult<uspViewEmployees5_Result> uspViewEmployees5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewEmployees5_Result>("uspViewEmployees5");
        }
    
        public virtual ObjectResult<uspViewMedications5_Result> uspViewMedications5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewMedications5_Result>("uspViewMedications5");
        }
    
        public virtual ObjectResult<uspViewOwnerPets4_Result> uspViewOwnerPets4(Nullable<long> ownerid)
        {
            var owneridParameter = ownerid.HasValue ?
                new ObjectParameter("ownerid", ownerid) :
                new ObjectParameter("ownerid", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwnerPets4_Result>("uspViewOwnerPets4", owneridParameter);
        }
    
        public virtual ObjectResult<uspViewOwners5_Result> uspViewOwners5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewOwners5_Result>("uspViewOwners5");
        }
    
        public virtual ObjectResult<uspViewPetGeneralInformation5_Result> uspViewPetGeneralInformation5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetGeneralInformation5_Result>("uspViewPetGeneralInformation5");
        }
    
        public virtual ObjectResult<uspViewPetMedications5_Result> uspViewPetMedications5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetMedications5_Result>("uspViewPetMedications5");
        }
    
        public virtual ObjectResult<uspViewPets5_Result> uspViewPets5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPets5_Result>("uspViewPets5");
        }
    
        public virtual ObjectResult<uspViewPetVaccinations5_Result> uspViewPetVaccinations5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVaccinations5_Result>("uspViewPetVaccinations5");
        }
    
        public virtual ObjectResult<uspViewPetVisits5_Result> uspViewPetVisits5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewPetVisits5_Result>("uspViewPetVisits5");
        }
    
        public virtual ObjectResult<uspViewServices5_Result> uspViewServices5()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<uspViewServices5_Result>("uspViewServices5");
        }
    }
}
